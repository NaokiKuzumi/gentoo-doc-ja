# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/openssh-key-management-p3.xml:6
#, no-wrap
msgid "OpenSSH key management, Part 3"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/openssh-key-management-p3.xml:13
#, no-wrap
msgid ""
"In this third article in a series, Daniel Robbins shows you how to take\n"
"advantage of OpenSSH agent connection forwarding to enhance security. He also\n"
"shares recent improvements to the keychain shell script.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/openssh-key-management-p3.xml:27
#, no-wrap
msgid "Agent forwarding and keychain improvements"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:32
#, no-wrap
msgid ""
"Many of us use the excellent OpenSSH as a secure, encrypted replacement for the\n"
"venerable telnet and rsh commands. One of OpenSSH's more intriguing features is\n"
"its ability to authenticate users using the RSA and DSA authentication\n"
"protocols, which are based on a pair of complementary numerical \"keys.\" One of\n"
"the main appeals of RSA and DSA authentication is the promise of being able to\n"
"establish connections to remote systems without supplying a password. For more\n"
"background, see the previous installments of this series on OpenSSH key\n"
"management, which cover <uri\n"
"link=\"/doc/en/articles/openssh-key-management-p1.xml\">RSA/DSA\n"
"authentication</uri> (Part 1) and ssh-agent and <uri\n"
"link=\"/doc/en/articles/openssh-key-management-p2.xml\">keychain</uri> (Part 2),\n"
"respectively.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:47
#, no-wrap
msgid ""
"Since Part 2 was published on developerWorks in September 2001, and later\n"
"referenced on Slashdot and Freshmeat (see <uri\n"
"link=\"#resources\">Resources</uri> later in this article for links to these\n"
"sites), a lot of people have started using keychain, and it's undergone a lot\n"
"of changes. I've received approximately 20 or so high-quality patches from\n"
"developers around the world. I've incorporated many of these patches into the\n"
"keychain source, which is now at version 1.8 (see <uri\n"
"link=\"#resources\">Resources</uri>).  I send my sincere thanks to all those who\n"
"submitted patches, bug reports, feature requests, and notes of appreciation.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:61
#, no-wrap
msgid "Tightening ssh security"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:65
#, no-wrap
msgid ""
"In my <uri link=\"/doc/en/articles/openssh-key-management-p2.xml\">last\n"
"article</uri>, I've spent some time discussing the security benefits and\n"
"tradeoffs of running ssh-agent. A few days after the second article appeared on\n"
"developerWorks, I received an e-mail from Charles Karney of Sarnoff\n"
"Corporation, who politely informed me of OpenSSH's new authentication agent\n"
"forwarding abilities, which we'll take a look at in a bit. In addition, Charles\n"
"emphasized that running ssh-agent on untrusted machines is quite dangerous: if\n"
"someone manages to get root access on the system, then your decrypted keys can\n"
"be extracted from ssh-agent. Even though extracting the keys would be somewhat\n"
"difficult, it is within the skill of professional crackers. And the mere fact\n"
"that private key theft is possible means that we should take steps to guard\n"
"against it happening in the first place.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:80
#, no-wrap
msgid ""
"To formulate a strategy to protect our private keys, we must first put the\n"
"machines we access into one of two categories. If a particular host is\n"
"well-secured or isolated -- making successful root exploit against it quite\n"
"unlikely -- then that machine should be considered a trusted host. If, however,\n"
"a machine is used by many other people or you have some doubts about the\n"
"security of the system, then the machine should be considered an untrusted\n"
"host. To guard your private keys against extraction, ssh-agent (and thus\n"
"keychain) should never be run on an untrusted host. That way, even if the\n"
"system's security is compromised, there will be no ssh-agent around for the\n"
"intruder to extract keys from in the first place.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:93
#, no-wrap
msgid ""
"However, this creates a problem. If you can't run ssh-agent on untrusted hosts,\n"
"then how do you establish secure, passwordless ssh connections from these\n"
"systems? The answer is to only use ssh-agent and keychain on trusted hosts, and\n"
"to use OpenSSH's new authentication forwarding abilities to extend passwordless\n"
"authentication to any untrusted hosts. In a nutshell, authentication forwarding\n"
"works by allowing remote ssh sessions to contact an ssh-agent running on a\n"
"trusted system.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:105
#, no-wrap
msgid "Authentication agent forwarding"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:109
#, no-wrap
msgid ""
"To get an idea of how authentication forwarding works, let's first take a look\n"
"at a hypothetical situation where user drobbins has a trusted laptop called\n"
"lappy, a trusted server called trustbox, and two other untrusted systems that\n"
"he must access, called notrust1 and notrust2, respectively. Currently, he uses\n"
"ssh-agent along with keychain on all four machines, as follows:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><figure>
#: en/articles/openssh-key-management-p3.xml:116
#, no-wrap
msgid "ssh-agent running on trusted and untrusted machines"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:119
#, no-wrap
msgid ""
"The problem with this approach is that if someone gains root access on notrust1\n"
"or notrust2, then it is of course possible for this person to extract keys from\n"
"the now vulnerable ssh-agent process. To fix this, drobbins stops running\n"
"ssh-agent and keychain on untrusted hosts notrust1 and notrust2. In fact, to be\n"
"even more careful, drobbins decides to only use ssh-agent and keychain on\n"
"lappy. This limits exposure of his decrypted private keys, protecting him\n"
"against private key theft:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><figure>
#: en/articles/openssh-key-management-p3.xml:128
#, no-wrap
msgid "ssh-agent running only on lappy; a more secure configuration"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:131
#, no-wrap
msgid ""
"Of course, the problem with this approach is that drobbins can now only\n"
"establish passwordless connections from lappy. Let's see how to enable\n"
"authentication forwarding and get around this problem.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:137
#, no-wrap
msgid ""
"Assuming that all machines are running recent versions of OpenSSH, we can get\n"
"around this problem by using authentication forwarding. Authentication\n"
"forwarding allows remote ssh processes to contact the ssh-agent that is running\n"
"on your local trusted machine -- rather than requiring a version of ssh-agent\n"
"to be running on the same machine that you are sshing out from. This usually\n"
"allows you to run ssh-agent (and keychain) on a single machine, and means that\n"
"all ssh connections that originate (either directly or indirectly) from this\n"
"machine will use your local ssh-agent.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:148
#, no-wrap
msgid ""
"To enable authentication forwarding, we add the following line to lappy and\n"
"trustbox's <path>/etc/ssh/ssh_config</path>. Note that this is the config file\n"
"for ssh (<path>ssh_config</path>), not the ssh daemon sshd\n"
"(<path>sshd_config</path>):\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:154
#, no-wrap
msgid "Add this line to your /etc/ssh/ssh_config"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:155
#, no-wrap
msgid "ForwardAgent Yes\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:159
#, no-wrap
msgid ""
"Now, to take advantage of authentication forwarding, drobbins can connect from\n"
"lappy to trustbox, and then from trustbox to notrust1 without supplying\n"
"passphrases for any of the connections. Both ssh processes \"tap in\" to the\n"
"ssh-agent running on lappy:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:165
#, no-wrap
msgid "Tapping lappy"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:166
#, no-wrap
msgid ""
"$ <i>ssh drobbins@trustbox</i>\n"
"Last login: Wed Sep 26 13:42:08 2001 from lappy\n"
"\n"
"Welcome to trustbox!\n"
"$ <i>ssh drobbins@notrust1</i>\n"
"Last login: Tue Sep 25 12:03:40 2001 from trustbox\n"
"\n"
"Welcome to notrust1!\n"
"$\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:178
#, no-wrap
msgid ""
"If you try a similar configuration and find that agent forwarding isn't\n"
"working, try using <c>ssh -A</c> instead of plain old ssh to explicitly enable\n"
"authentication forwarding. Here's a diagram of what went on behind the scenes\n"
"when we logged in to trustbox and notrust1 using authentication forwarding,\n"
"above:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><figure>
#: en/articles/openssh-key-management-p3.xml:185
#, no-wrap
msgid "Agent forwarding in action"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:188
#, no-wrap
msgid ""
"As you can see, when ssh connected to trustbox, it maintained a connection to\n"
"the ssh-agent running on lappy. When an ssh connection was made from trustbox\n"
"to notrust1, this new ssh process maintained the authentication connection to\n"
"the previous ssh, effectively extending the chain. Whether this authentication\n"
"chain can be extended beyond notrust1 to other hosts depends on how notrust1's\n"
"<path>/etc/ssh/ssh_config</path> is configured. As long as agent forwarding is\n"
"enabled, all parts of the chain will be able to authenticate using the\n"
"ssh-agent running on the trusted lappy.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:201
#, no-wrap
msgid "Advantages of agent connection forwarding"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:205
#, no-wrap
msgid ""
"Authentication forwarding offers a number of security advantages not touched on\n"
"here. To convince me of the importance of agent connection forwarding, Charles\n"
"Karney shared with me these three security advantages:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ol><li>
#: en/articles/openssh-key-management-p3.xml:212
#, no-wrap
msgid ""
"    The private key is stored only on the trusted machine. This prevents\n"
"    malicious users from grabbing your encrypted key from disk and attempting\n"
"    to crack the encryption.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ol><li>
#: en/articles/openssh-key-management-p3.xml:217
#, no-wrap
msgid ""
"    ssh-agent runs only on the trusted machine. This prevents an intruder from\n"
"    doing a memory dump of a remote ssh-agent process and then extracting your\n"
"    decrypted private keys from the dump.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ol><li>
#: en/articles/openssh-key-management-p3.xml:222
#, no-wrap
msgid ""
"    Since you only need to type in the passphrase on your trusted machine, you\n"
"    prevent any keystroke loggers from stealthily grabbing your passphrase as\n"
"    it is entered.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:229
#, no-wrap
msgid ""
"The one drawback to relying on authentication agent connection forwarding is\n"
"that it doesn't solve the problem of allowing cron jobs to take advantage of\n"
"RSA/DSA authentication. One solution to this problem is to set up all cron jobs\n"
"that need RSA/DSA authentication so that they execute from a trusted machine on\n"
"your LAN. If necessary, these cron jobs can use ssh to connect to remote\n"
"systems to automate backups, synchronize files, and so on.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:238
#, no-wrap
msgid ""
"Now that we've looked at authentication agent connection forwarding, let's turn\n"
"to recent improvements made to the keychain script itself.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:245
#, no-wrap
msgid "Keychain functionality improvements"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:249
#, no-wrap
msgid ""
"Thanks to user patch submissions, many significant improvements have been made\n"
"to the keychain source. Several of the user-submitted keychain patches were\n"
"functionality-related. For example, you'll recall that keychain created an\n"
"<path>~/.ssh-agent</path> file; the name of this file has now been changed to\n"
"<path>~/.ssh-agent-[hostname]</path> so that keychain works with NFS-mounted\n"
"home directories that may be accessed from several different physical hosts. In\n"
"addition to the <path>~/.ssh-agent-[hostname]</path> file, there is now a\n"
"<path>~/.ssh-agent-csh-[hostname]</path> file that can be sourced by\n"
"csh-compatible shells.  Finally, a new <c>--nocolor</c> option has been added\n"
"so that colorization features can be disabled if you happen to be using a\n"
"non-vt100-compatible terminal.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:265
#, no-wrap
msgid "Shell compatibility fixes"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:269
#, no-wrap
msgid ""
"While the functionality improvements have been significant, the vast majority\n"
"of fixes have dealt with shell compatibility issues. You see, while keychain\n"
"1.0 required bash, later versions were changed to work with any sh-compatible\n"
"shell. This change allows keychain to work \"out of the box\" on nearly any UNIX\n"
"system, including Linux, BSD, Solaris, IRIX, and AIX as well as other UNIX\n"
"platforms. While the transition to sh and general UNIX compatibility has been a\n"
"bumpy ride, it has also been a tremendous learning experience. Creating a\n"
"single script that runs on all of these platforms has been very tricky indeed,\n"
"mainly because I simply don't have access to most of these operating systems!\n"
"Thankfully, keychain users from around the globe do, and many have provided\n"
"great assistance in identifying compatibility problems and submitting patches\n"
"to fix them.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:284
#, no-wrap
msgid ""
"There are really two kinds of compatibility problems that had to be fixed.\n"
"First, I needed to make sure that keychain only used built-ins, expressions,\n"
"and operators that were fully supported under all sh implementations, including\n"
"all the popular free and commercial UNIX sh shells, zsh (in sh-compatibility\n"
"mode), and bash versions 1 and 2. Here are some of the user-submitted\n"
"shell-compatibility fixes that were applied to the keychain source:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:293
#, no-wrap
msgid ""
"Since older sh shells don't support the ~ convention to refer to a user's home\n"
"directory, lines that used ~ were changed to use <c>$HOME</c> instead:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:297
#, no-wrap
msgid "Making it $HOME"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:298
#, no-wrap
msgid ""
"hostname=`uname -n`\n"
"pidf=${HOME}/.ssh-agent-${hostname}\n"
"cshpidf=${HOME}/.ssh-agent-csh-${hostname}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:304
#, no-wrap
msgid ""
"Next, all references to source were changed to . to ensure compatibility with\n"
"purist NetBSD's /bin/sh, which doesn't support the source command at all:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:308
#, no-wrap
msgid "Humoring NetBSD"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:309
#, no-wrap
msgid ""
"if [ -f $pidf ]\n"
"then\n"
"    . $pidf\n"
"else\n"
"SSH_AGENT_PID=\"NULL\"\n"
"fi\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:318
#, no-wrap
msgid ""
"Along the way, I also applied some nice performance-related fixes. One savvy\n"
"shell scripter informed me that instead of \"touching\" a file by typing touch\n"
"foo, you can do this instead:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:323
#, no-wrap
msgid "Touching files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:324
#, no-wrap
msgid "> <i>foo</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:328
#, no-wrap
msgid ""
"By relying on built-in shell syntax rather than using an external binary, a\n"
"fork() is avoided and the script becomes slightly more efficient. The > foo\n"
"should work with any sh-compatible shell; however, it does not appear to be\n"
"supported by ash. This shouldn't be a problem for most people, since ash is\n"
"more of an emergency-disk type shell rather than something people use on a\n"
"day-to-day basis.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:339
#, no-wrap
msgid "Platform executable issues"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:343
#, no-wrap
msgid ""
"Getting a script working under multiple UNIX operating systems requires more\n"
"than adhering to pure sh syntax. Remember, most scripts also call external\n"
"commands, such as grep, awk, ps, and others, and these commands must be called\n"
"in a standards-compliant way as much as possible. For example, while the echo\n"
"included with most versions of UNIX recognizes the <c>-e</c> option, Solaris\n"
"does not -- it simply prints a <c>-e</c> to stdout when it is used. So in order\n"
"to deal with Solaris, keychain now auto-detects whether <c>echo -e</c> works:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:352
#, no-wrap
msgid "Sniffing out Solaris"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:353
#, no-wrap
msgid ""
"if [ -z \"`echo -e`\" ]\n"
"then\n"
"    E=\"-e\"\n"
"fi\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:360
#, no-wrap
msgid ""
"Above, E is set to <c>-e</c> if -e escaping is supported. Then, echo can be\n"
"called as follows:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:364
#, no-wrap
msgid "Better echo"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:365
#, no-wrap
msgid "echo $E Usage: ${CYAN}${0}${OFF} [ ${GREEN}options${OFF} ] ${CYAN}sshkey${OFF} ...\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:369
#, no-wrap
msgid ""
"By using <c>echo $E</c> instead of <c>echo -e</c>, the -e option can be\n"
"dynamically enabled or disabled as needed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:376
#, no-wrap
msgid "pidof, ps"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:380
#, no-wrap
msgid ""
"Probably the most significant compatibility fix involved changing how keychain\n"
"detects currently running ssh-agent processes. Previously, I was using the\n"
"pidof command to do this, but it had to be removed since several systems don't\n"
"have a pidof. Really, pidof isn't the greatest solution anyway since it lists\n"
"all ssh-agent processes running on the system, regardless of user, when we're\n"
"really interested in all ssh-agent processes owned by the current effective\n"
"UID.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:390
#, no-wrap
msgid ""
"So, instead of relying on pidof, we switched over to piping ps output to grep\n"
"and awk in order to extract the needed process ids. This was a user-submitted\n"
"fix:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:395
#, no-wrap
msgid "Piping better than pidof"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:396
#, no-wrap
msgid "mypids=`ps uxw | grep ssh-agent | grep -v grep | awk '{print $2}'`\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:400
#, no-wrap
msgid ""
"The above pipeline will set the mypids variable to the values of all ssh-agent\n"
"processes owned by the current user. The grep -v grep command is part of the\n"
"pipeline to ensure that the grep ssh-agent process does not become part of our\n"
"PID list.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:407
#, no-wrap
msgid ""
"While this approach is good in concept, using ps opened up a whole new can of\n"
"worms since ps options are not standardized across various BSD and System V\n"
"UNIX derivatives. Here's an example: while ps uxw works under Linux, it does\n"
"not work under IRIX. And while <c>ps -u username -f</c> works under Linux,\n"
"IRIX, and Solaris, it doesn't work under BSD, which only understands BSD-style\n"
"ps options. To get around this problem, keychain auto-detects whether the\n"
"current system's ps works with BSD or System V syntax before executing the ps\n"
"pipeline:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:417
#, no-wrap
msgid "Detecting BSD vs. System V"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:418
#, no-wrap
msgid ""
"psopts=\"FAIL\"\n"
"ps uxw >/dev/null 2>&amp;1\n"
"if [ $? -eq 0 ]\n"
"then\n"
"psopts=\"uxw\"\n"
"else\n"
"ps -u `whoami` -f >/dev/null 2>&amp;1\n"
"if [ $? -eq 0 ]\n"
"then\n"
"psopts=\"-u `whoami` -f\"\n"
"fi\n"
"fi\n"
"if [ \"$psopts\" = \"FAIL\" ]\n"
"then\n"
"echo $0: unable to use \\\"ps\\\" to scan for ssh-agent processes.  \n"
"Report KeyChain version and echo system configuration to drobbins@gentoo.org.\n"
"exit 1\n"
"fi\n"
"\n"
"mypids=`ps $psopts 2>/dev/null | grep \"[s]sh-agent\" | awk '{print $2}'` > /dev/null 2>&amp;1\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:441
#, no-wrap
msgid ""
"To ensure that we work with both System V and BSD-style ps commands, the script\n"
"does a \"dry run\" of ps uxw, throwing away any output. If the error code from\n"
"this command is zero, we know that ps uxw works and we set the psopts value\n"
"appropriately. However, if ps uxw returned a non-zero error code (indicating\n"
"that we need to use BSD-style options), we do a dry-run of <c>ps -u `whoami`\n"
"-f</c>, again throwing away all output. At this point, hopefully we've found\n"
"either a BSD or System V variant of ps that we can use. If we haven't, we print\n"
"out an error and exit. But it is very likely that one of the two ps commands\n"
"worked, in which case we execute the final line in the above code snippet, our\n"
"ps pipeline. By using the $psopts variable expansion immediately after ps,\n"
"we're able to pass the correct options to the ps command.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:455
#, no-wrap
msgid ""
"The ps pipeline also contains a true grep gem, which was kindly sent to me by\n"
"Hans Peter Verne. Notice that <c>grep -v grep</c> is no longer part of the\n"
"pipeline; instead, it has been removed and <c>grep \"ssh-agent\"</c> has been\n"
"changed to grep <c>\"[s]sh-agent\"</c>. This single grep command ends up doing\n"
"the same thing as <c>grep ssh-agent | grep -v grep</c>; can you figure out why?\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:462
#, no-wrap
msgid "Neat grep trick"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p3.xml:463
#, no-wrap
msgid "mypids=`ps $psopts 2>/dev/null | grep \"[s]sh-agent\" | awk '{print $2}'` > /dev/null 2>&amp;1\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:467
#, no-wrap
msgid ""
"Stumped? If you've decided that a <c>grep \"ssh-agent\"</c> and <c>grep\n"
"\"[s]sh-agent\"</c> should match the exact same lines of text, you are correct.\n"
"So why do they generate different results when the output of ps is piped to\n"
"them? Here's how it works: when you use grep \"[s]sh-agent\", you change how the\n"
"grep command appears in the ps process list. By doing so, you prevent grep from\n"
"matching itself, since the [s]sh-agent string doesn't match the [s]sh-agent\n"
"regular expression. Isn't that brilliant? If you still don't get it, play\n"
"around with grep a bit more and you'll get it soon enough.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p3.xml:480
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p3.xml:484
#, no-wrap
msgid ""
"This column concludes my coverage of OpenSSH. Hopefully, you've learned enough\n"
"about it to start using OpenSSH to secure your systems. Next month's Common\n"
"threads column will continue with the \"Advanced filesystem implementor's guide\"\n"
"series.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/openssh-key-management-p3.xml:495
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p3.xml:501
#, no-wrap
msgid ""
"    Read Daniel's other two articles in this series, <uri\n"
"    link=\"/doc/en/articles/openssh-key-management-p1.xml\">OpenSSH key\n"
"    management, Part 1</uri> and <uri\n"
"    link=\"/doc/en/articles/openssh-key-management-p2.xml\">OpenSSH key\n"
"    management, Part 2</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p3.xml:508
#, no-wrap
msgid ""
"    Be sure to visit the <uri link=\"http://www.openssh.com/\">home of OpenSSH\n"
"    development</uri>, and check out the <uri\n"
"    link=\"http://www.openssh.com/faq.html\">OpenSSH FAQ</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p3.xml:513
#, no-wrap
msgid ""
"    <uri link=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/\">PuTTY</uri>\n"
"    is an excellent ssh client for Windows machines\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p3.xml:517
#, no-wrap
msgid ""
"    The book \"SSH, The Secure Shell: The Definitive Guide\" (O'Reilly &amp;\n"
"    Associates, 2001) may be of assistance. The <uri\n"
"    link=\"http://www.snailbook.com/\">authors' site</uri> contains information\n"
"    about the book, a FAQ, news, and updates.\n"
"  "
msgstr ""
