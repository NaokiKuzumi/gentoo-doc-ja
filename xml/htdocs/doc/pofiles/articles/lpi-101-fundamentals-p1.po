# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/lpi-101-fundamentals-p1.xml:6
#, no-wrap
msgid "LPI certification 101 (release 2) exam prep, Part 1"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/lpi-101-fundamentals-p1.xml:16
#, no-wrap
msgid ""
"In this tutorial, we'll introduce you to bash (the standard Linux shell), show \n"
"you how to take full advantage of standard Linux commands like ls, cp, and mv,\n"
"explain inodes and hard and symbolic links, and much more. By the end of this\n"
"tutorial, you'll have a solid grounding in Linux fundamentals and will even be\n"
"ready to begin learning some basic Linux system administration tasks.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:32
#, no-wrap
msgid "Before You Start"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:34
#, no-wrap
msgid "About this tutorial"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:38
#, no-wrap
msgid ""
"Welcome to \"Linux fundamentals,\" the first of four tutorials designed to prepare\n"
"you for the Linux Professional Institute's 101 exam. In this tutorial, we'll\n"
"introduce you to bash (the standard Linux shell), show you how to take full\n"
"advantage of standard Linux commands like ls, cp, and mv, explain inodes and\n"
"hard and symbolic links, and much more. By the end of this tutorial, you'll have\n"
"a solid grounding in Linux fundamentals and will even be ready to begin learning\n"
"some basic Linux system administration tasks. By the end of this series of\n"
"tutorials (eight in all), you'll have the knowledge you need to become a Linux\n"
"Systems Administrator and will be ready to attain an LPIC Level 1 certification\n"
"from the Linux Professional Institute if you so choose.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:51
#, no-wrap
msgid ""
"This particular tutorial (Part 1) is ideal for those who are new to Linux, or\n"
"those who want to review or improve their understanding of fundamental Linux\n"
"concepts like copying and moving files, creating symbolic and hard links, and\n"
"using Linux' standard text-processing commands along with pipelines and\n"
"redirection. Along the way, we'll share plenty of hints, tips, and tricks to\n"
"keep the tutorial meaty and practical, even for those with a good amount of\n"
"previous Linux experience. For beginners, much of this material will be new, but\n"
"more experienced Linux users may find this tutorial to be a great way of\n"
"rounding out their fundamental Linux skills.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:63
#, no-wrap
msgid ""
"For those who have taken the release 1 version of this tutorial for reasons\n"
"other than LPI exam preparation, you probably don't need to take this one.\n"
"However, if you do plan to take the exams, you should strongly consider reading\n"
"this revised tutorial.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:72
#, no-wrap
msgid "About the author"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:76
#, no-wrap
msgid ""
"Residing in Albuquerque, New Mexico, Daniel Robbins is the Chief Architect of\n"
"Gentoo Linux an advanced ports-based Linux meta distribution. He also writes\n"
"articles, tutorials, and tips for the IBM developerWorks Linux zone and Intel\n"
"Developer Services and has also served as a contributing author for several\n"
"books, including Samba Unleashed and SuSE Linux Unleashed. Daniel enjoys\n"
"spending time with his wife, Mary, and his daughter, Hadassah. You can contact\n"
"Daniel at drobbins@gentoo.org.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:90
#, no-wrap
msgid "Introducing bash"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:92
#, no-wrap
msgid "The shell"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:96
#, no-wrap
msgid ""
"If you've used a Linux system, you know that when you log in, you are greeted by\n"
"a prompt that looks something like this:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:100
#, no-wrap
msgid "The prompt"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:101
#, no-wrap
msgid "$\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:105
#, no-wrap
msgid ""
"The particular prompt that you see may look quite different. It may contain your\n"
"systems host name, the name of the current working directory, or both. But\n"
"regardless of what your prompt looks like, there's one thing that's certain. The\n"
"program that printed that prompt is called a \"shell,\" and it's\n"
"very likely that your particular shell is a program called <c>bash</c>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:115
#, no-wrap
msgid "Are you running bash?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:119
#, no-wrap
msgid "You can check to see if you're running <c>bash</c> by typing:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:122
#, no-wrap
msgid "The SHELL variable"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:123
#, no-wrap
msgid ""
"$ <i>echo $SHELL</i>\n"
"/bin/bash\n"
msgstr ""

#.  (The next tutorial
#. in this series, on basic administration, covers changing your shell using the
#. <c>
#. chsh</c> command.) 
#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:128
#, no-wrap
msgid ""
"If the above line gave you an error or didn't respond similarly to our example,\n"
"then you may be running a shell other than bash. In that case, most of this\n"
"tutorial should still apply, but it would be advantageous for you to switch to\n"
"<c>bash</c> for the sake of preparing for the 101 exam. \n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:139
#, no-wrap
msgid "About bash"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:143
#, no-wrap
msgid ""
"Bash, an acronym for \"Bourne-again shell,\" is the default shell on\n"
"most Linux systems. The shell's job is to obey your commands so that you can\n"
"interact with your Linux system. When you're finished entering commands, you may\n"
"instruct the shell to exit or logout, at which point you'll be returned to a\n"
"login prompt.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:151
#, no-wrap
msgid "By the way, you can also log out by pressing control-D at the bash prompt.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:157
#, no-wrap
msgid "Using \"cd\""
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:161
#, no-wrap
msgid ""
"As you've probably found, staring at your bash prompt isn't the most exciting\n"
"thing in the world. So, let's start using bash to navigate around our file \n"
"system. At the prompt, type the following (without the <c>$</c>):\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:166
#, no-wrap
msgid "Changing directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:167
#, no-wrap
msgid "$ <i>cd /</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:171
#, no-wrap
msgid ""
"We've just told bash that you want to work in /, also known as the root\n"
"directory; all the directories on the system form a tree, and / is considered\n"
"the top of this tree, or the root. cd sets the directory where you are currently\n"
"working, also known as the \"current working directory.\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:180
#, no-wrap
msgid "Paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:184
#, no-wrap
msgid "To see bash's current working directory, you can type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:187
#, no-wrap
msgid "Present Working Directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:188
#, no-wrap
msgid ""
"$ <i>pwd</i>\n"
"/\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:193
#, no-wrap
msgid ""
"In the above example, the / argument to <c>cd</c> is called a <e>path</e>. It\n"
"tells cd where we want to go. In particular, the / argument is an \n"
"<e>absolute</e> path, meaning that it specifies a location relative to the \n"
"root of the file system tree.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:202
#, no-wrap
msgid "Absolute paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:206
#, no-wrap
msgid "Here are some other absolute paths:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:209
#, no-wrap
msgid "Example absolute paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:210
#, no-wrap
msgid ""
"/dev\n"
"/usr\n"
"/usr/bin\n"
"/usr/local/bin\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:217
#, no-wrap
msgid ""
"As you can see, the one thing that all absolute paths have in common is that\n"
"they begin with /. With a path of /usr/local/bin, we're telling cd to enter the \n"
"/ directory, then the usr directory under that, and then local and bin. Absolute\n"
"paths are always evaluated by starting at / first.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:226
#, no-wrap
msgid "Relative paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:230
#, no-wrap
msgid ""
"The other kind of path is called a <e>relative path</e>. <c>Bash</c>, <c>cd</c>,\n"
"and other commands always interpret these paths relative to the current \n"
"directory. Relative paths never begin with a /. So, if we're in /usr:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:235
#, no-wrap
msgid "Changing directories with absolute paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:236
#, no-wrap
msgid "$ <i>cd /usr</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:240
#, no-wrap
msgid "Then, we can use a relative path to change to the /usr/local/bin directory:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:243
#, no-wrap
msgid "Changing directories with relative paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:244
#, no-wrap
msgid ""
"$ <i>cd local/bin</i>\n"
"$ <i>pwd</i>\n"
"/usr/local/bin\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:252
#, no-wrap
msgid "Using .."
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:256
#, no-wrap
msgid ""
"Relative paths may also contain one or more .. directories. The .. directory is\n"
"a special directory that points to the parent directory. So, continuing from the\n"
"example above:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:261
#, no-wrap
msgid "Using the 'parent directory' notation"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:262
#, no-wrap
msgid ""
"$ <i>pwd</i>\n"
"/usr/local/bin\n"
"$ <i>cd ..</i>\n"
"$ <i>pwd</i>\n"
"/usr/local\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:270
#, no-wrap
msgid ""
"As you can see, our current directory is now /usr/local. We were able to go \n"
"\"backwards\" one directory, relative to the current directory that\n"
"we were in.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:276
#, no-wrap
msgid ""
"In addition, we can also add .. to an existing relative path, allowing us to go\n"
"into a directory that's alongside one we are already in, for example:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:280
#, no-wrap
msgid "Using the parent directory notation in relative paths"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:281
#, no-wrap
msgid ""
"$ <i>pwd</i>\n"
"/usr/local\n"
"$ <i>cd ../share</i>\n"
"$ <i>pwd</i>\n"
"/usr/share\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:291
#: en/articles/lpi-101-fundamentals-p1.xml:300
#, no-wrap
msgid "Relative path examples"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:295
#, no-wrap
msgid ""
"Relative paths can get quite complex. Here are a few examples, all without the\n"
"resultant target directory displayed. Try to figure out where you'll end up\n"
"after typing these commands:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:301
#, no-wrap
msgid ""
"$ <i>cd /bin</i>\n"
"$ <i>cd ../usr/share/zoneinfo</i>\n"
"\n"
"\n"
"$ <i>cd /usr/X11R6/bin</i>\n"
"$ <i>cd ../lib/X11</i>\n"
"\n"
"\n"
"$ <i>cd /usr/bin</i>\n"
"$ <i>cd ../bin/../bin</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:314
#, no-wrap
msgid "Now, try them out and see if you got them right :)\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:320
#, no-wrap
msgid "Understanding ."
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:324
#, no-wrap
msgid ""
"Before we finish our coverage of cd, there are a few more things I need to\n"
"mention. First, there is another special directory called ., which means \n"
"\"the current directory\". While this directory isn't used with the\n"
"cd command, it's often used to execute some program in the current directory,\n"
"as follows:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:331
#, no-wrap
msgid "Running a program from the current location"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:332
#, no-wrap
msgid "$ <i>./myprog</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:336
#, no-wrap
msgid ""
"In the above example, the myprog executable residing in the current working\n"
"directory will be executed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:343
#, no-wrap
msgid "cd and the home directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:347
#, no-wrap
msgid "If we wanted to change to our home directory, we could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:350
#, no-wrap
msgid "Go to the HOME directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:351
#, no-wrap
msgid "$ <i>cd</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:355
#, no-wrap
msgid ""
"With no arguments, cd will change to your home directory, which is /root for\n"
"the superuser and typically /home/username for a regular user. But what if we\n"
"want to specify a file in our home directory? Maybe we want to pass a file\n"
"argument to the <c>myprog</c> command. If the file lives in our home directory,\n"
"we can type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:362
#, no-wrap
msgid "Execute a program in the current directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:363
#, no-wrap
msgid "$ <i>./myprog /home/drobbins/myfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:367
#, no-wrap
msgid ""
"However, using an absolute path like that isn't always convenient. Thankfully,\n"
"we can use the ~ (tilde) character to do the same thing:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:371
#, no-wrap
msgid "Using the 'home directory' notation"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:372
#, no-wrap
msgid "$ <i>./myprog ~/myfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:378
#, no-wrap
msgid "Other users' home directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:382
#, no-wrap
msgid ""
"Bash will expand a lone ~ to point to your home directory, but you can also use\n"
"it to point to other users' home directories. For example, if we wanted to refer\n"
"to a file called fredsfile.txt in Fred's home directory, we could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:387
#, no-wrap
msgid "Example use of the 'home directory' notation"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:388
#, no-wrap
msgid "$ <i>./myprog ~fred/fredsfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:395
#, no-wrap
msgid "Using Linux Commands"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:397
#, no-wrap
msgid "Introducing ls"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:401
#, no-wrap
msgid ""
"Now, we'll take a quick look at the ls command. Very likely, you're already\n"
"familiar with ls and know that typing it by itself will list the contents of the\n"
"current working directory:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:406
#, no-wrap
msgid "Listing files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:407
#, no-wrap
msgid ""
"$ <i>cd /usr</i>\n"
"$ <i>ls</i>\n"
"X11R6      doc         i686-pc-linux-gnu  lib      man          sbin   ssl\n"
"bin        gentoo-x86  include            libexec  portage      share  tmp\n"
"distfiles  i686-linux  info               local    portage.old  src\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:415
#, no-wrap
msgid ""
"By specifying the -a option, you can see all of the files in a directory,\n"
"including hidden files: those that begin with .. As you can see in the following\n"
"example, ls -a reveals the . and .. special directory links:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:420
#, no-wrap
msgid "Listing files, including hidden ones"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:421
#, no-wrap
msgid ""
"$ <i>ls -a</i>\n"
".      bin        gentoo-x86         include  libexec  portage      share  tmp\n"
"..     distfiles  i686-linux         info     local    portage.old  src\n"
"X11R6  doc        i686-pc-linux-gnu  lib      man      sbin         ssl\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:430
#, no-wrap
msgid "Long directory listings"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:434
#, no-wrap
msgid ""
"You can also specify one or more files or directories on the <c>ls</c> command \n"
"line. If you specify a file, <c>ls</c> will show that file only. If you specify\n"
"a directory, <c>ls</c> will show the <e>contents</e> of the directory. The\n"
"<c>-l</c> option comes in very handy when you need to view permissions,\n"
"ownership, modification time, and size information in your directory listing.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:442
#, no-wrap
msgid ""
"In the following example, we use the <c>-l</c> option to display a full listing\n"
"of my /usr directory.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:446
#, no-wrap
msgid "Listing files with all information"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:447
#, no-wrap
msgid ""
"$ <i>ls -l /usr</i>\n"
"drwxr-xr-x    7 root     root          168 Nov 24 14:02 X11R6\n"
"drwxr-xr-x    2 root     root        14576 Dec 27 08:56 bin\n"
"drwxr-xr-x    2 root     root         8856 Dec 26 12:47 distfiles\n"
"lrwxrwxrwx    1 root     root            9 Dec 22 20:57 doc -&gt; share/doc\n"
"drwxr-xr-x   62 root     root         1856 Dec 27 15:54 gentoo-x86\n"
"drwxr-xr-x    4 root     root          152 Dec 12 23:10 i686-linux\n"
"drwxr-xr-x    4 root     root           96 Nov 24 13:17 i686-pc-linux-gnu\n"
"drwxr-xr-x   54 root     root         5992 Dec 24 22:30 include\n"
"lrwxrwxrwx    1 root     root           10 Dec 22 20:57 info -&gt; share/info\n"
"drwxr-xr-x   28 root     root        13552 Dec 26 00:31 lib\n"
"drwxr-xr-x    3 root     root           72 Nov 25 00:34 libexec\n"
"drwxr-xr-x    8 root     root          240 Dec 22 20:57 local\n"
"lrwxrwxrwx    1 root     root            9 Dec 22 20:57 man -&gt; share/man\n"
"lrwxrwxrwx    1 root     root           11 Dec  8 07:59 portage -&gt; gentoo-x86/\n"
"drwxr-xr-x   60 root     root         1864 Dec  8 07:55 portage.old\n"
"drwxr-xr-x    3 root     root         3096 Dec 22 20:57 sbin\n"
"drwxr-xr-x   46 root     root         1144 Dec 24 15:32 share\n"
"drwxr-xr-x    8 root     root          328 Dec 26 00:07 src\n"
"drwxr-xr-x    6 root     root          176 Nov 24 14:25 ssl\n"
"lrwxrwxrwx    1 root     root           10 Dec 22 20:57 tmp -&gt; ../var/tmp\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:471
#, no-wrap
msgid ""
"The first column displays permissions information for each item in the listing.\n"
"I'll explain how to interpret this information in a bit. The next column lists\n"
"the number of links to each file system object, which we'll gloss over now but\n"
"return to later. The third and fourth columns list the owner and group,\n"
"respectively. The fifth column lists the object size. The sixth column is the\n"
"\"last modified\" time or \"mtime\" of the object. The\n"
"last column is the object's name. If the file is a symbolic link, you'll see a\n"
"trailing -&gt; and the path to which the symbolic link points.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:484
#, no-wrap
msgid "Looking at directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:488
#, no-wrap
msgid ""
"Sometimes, you'll want to look at a directory, rather than inside it. For these\n"
"situations, you can specify the <c>-d</c> option, which will tell ls to look at\n"
"any directories that it would normally look inside:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:493
#, no-wrap
msgid "Listing directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:494
#, no-wrap
msgid ""
"$ <i>ls -dl /usr /usr/bin /usr/X11R6/bin ../share</i>\n"
"drwxr-xr-x    4 root     root           96 Dec 18 18:17 ../share\n"
"drwxr-xr-x   17 root     root          576 Dec 24 09:03 /usr\n"
"drwxr-xr-x    2 root     root         3192 Dec 26 12:52 /usr/X11R6/bin\n"
"drwxr-xr-x    2 root     root        14576 Dec 27 08:56 /usr/bin\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:504
#, no-wrap
msgid "Recursive and inode listings"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:508
#, no-wrap
msgid ""
"So you can use <c>-d</c> to look at a directory, but you can also use <c>-R</c>\n"
"to do the opposite: not just look inside a directory, but recursively look\n"
"inside all the files and directories inside that directory! We won't include any\n"
"example output for this option (since it's generally voluminous), but you may\n"
"want to try a few <c>ls -R</c> and <c>ls -Rl</c> commands to get a feel for how\n"
"this works.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:517
#, no-wrap
msgid ""
"Finally, the <c>-i</c> ls option can be used to display the inode numbers of the\n"
"file system objects in the listing:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:521
#, no-wrap
msgid "Listing inodes"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:522
#, no-wrap
msgid ""
"$ <i>ls -i /usr</i>\n"
"   1409 X11R6        314258 i686-linux           43090 libexec        13394 sbin\n"
"   1417 bin            1513 i686-pc-linux-gnu     5120 local          13408 share\n"
"   8316 distfiles      1517 include                776 man            23779 src\n"
"     43 doc            1386 info                 93892 portage        36737 ssl\n"
"  70744 gentoo-x86     1585 lib                   5132 portage.old      784 tmp\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:533
#, no-wrap
msgid "Understanding inodes"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:537
#, no-wrap
msgid ""
"Every object on a file system is assigned a unique index, called an <e>inode</e>\n"
"number. This might seem trivial, but understanding inodes is essential to\n"
"understanding many file system operations. For example, consider the . and .. \n"
"links that appear in every directory. To fully understand what a .. directory\n"
"actually is, we'll first take a look at /usr/local's inode number:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:544
#: en/articles/lpi-101-fundamentals-p1.xml:554
#, no-wrap
msgid "Listing inode for a directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:545
#, no-wrap
msgid ""
"$ <i>ls -id /usr/local</i>\n"
"   5120 /usr/local\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:550
#, no-wrap
msgid ""
"The /usr/local directory has an inode number of 5120. Now, let's take a look at\n"
"the inode number of /usr/local/bin/..:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:555
#, no-wrap
msgid ""
"$ <i>ls -id /usr/local/bin/..</i>\n"
"   5120 /usr/local/bin/..\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:560
#, no-wrap
msgid ""
"As you can see, /usr/local/bin/.. has the same inode number as /usr/local!\n"
"Here's how can we come to grips with this shocking revelation. In the past,\n"
"we've considered /usr/local to be the directory itself. Now, we discover that\n"
"inode 5120 is in fact the directory, and we have found two directory entries\n"
"(called \"links\") that point to this inode. Both /usr/local and /usr/local/bin/..\n"
"are links to inode 5120. Although inode 5120 only exists in one place on disk,\n"
"multiple things link to it. Inode 5120 is the actual entry on disk.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:570
#, no-wrap
msgid ""
" In fact, we can see the total number of times that inode 5120 is referenced by\n"
"using the <c>ls -dl</c> command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:574
#, no-wrap
msgid "Listing inode reference"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:575
#, no-wrap
msgid ""
"$ <i>ls -dl /usr/local</i>\n"
"drwxr-xr-x    8 root     root          240 Dec 22 20:57 /usr/local\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:580
#, no-wrap
msgid ""
"If we take a look at the second column from the left, we see that the directory\n"
"/usr/local (inode 5120) is referenced eight times. On my system, here are the\n"
"various paths that reference this inode:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:585
#, no-wrap
msgid "Inode references"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:586
#, no-wrap
msgid ""
"/usr/local\n"
"/usr/local/.\n"
"/usr/local/bin/..\n"
"/usr/local/games/..\n"
"/usr/local/lib/..\n"
"/usr/local/sbin/..\n"
"/usr/local/share/..\n"
"/usr/local/src/..\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:599
#, no-wrap
msgid "mkdir"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:603
#, no-wrap
msgid ""
"Let's take a quick look at the mkdir command, which can be used to create new\n"
"directories. The following example creates three new directories, tic, tac, and\n"
"toe, all under /tmp:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:608
#, no-wrap
msgid "Creating directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:609
#, no-wrap
msgid ""
"$ <i>cd /tmp</i>\n"
"$ <i>mkdir tic tac toe</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:614
#, no-wrap
msgid ""
"By default, the mkdir command doesn't create parent directories for you; the\n"
"entire path up to the next-to-last element needs to exist. So, if you want to\n"
"create the directories <path>won/der/ful</path>, you'd need to issue three\n"
"separate <c>mkdir</c> commands:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:620
#, no-wrap
msgid "Creating parent directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:621
#, no-wrap
msgid ""
"$ <i>mkdir won/der/ful</i>\n"
"mkdir: cannot create directory `won/der/ful': No such file or directory\n"
"$ <i>mkdir won</i>\n"
"$ <i>mkdir won/der</i>\n"
"$ <i>mkdir won/der/ful</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:629
#, no-wrap
msgid ""
"However, mkdir has a handy -p option that tells mkdir to create any missing\n"
"parent directories, as you can see here:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:633
#, no-wrap
msgid "Creating parent directories in one go"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:634
#, no-wrap
msgid "$ <i>mkdir -p easy/as/pie</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:638
#, no-wrap
msgid ""
"All in all, pretty straightforward. To learn more about the mkdir command, type\n"
"<c>man mkdir</c> to read the manual page. This will work for nearly all commands\n"
"covered here (for example, <c>man ls</c>), except for cd, which is built-in to\n"
"bash.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:647
#, no-wrap
msgid "touch"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:651
#, no-wrap
msgid ""
"Now, we're going to take a quick look at the <c>cp</c> and <c>mv</c> commands,\n"
"used to copy, rename, and move files and directories. To begin this overview,\n"
"we'll first use the <c>touch</c> command to create a file in /tmp:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:656
#, no-wrap
msgid "Creating a file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:657
#, no-wrap
msgid ""
"$ <i>cd /tmp</i>\n"
"$ <i>touch copyme</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:662
#, no-wrap
msgid ""
"The touch command updates the \"mtime\" of a file if it exists\n"
"(recall the sixth column in <c>ls -l</c> output). If the file doesn't exist,\n"
"then a new, empty file will be created. You should now have a \n"
"<path>/tmp/copyme</path> file with a size of zero. \n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:671
#, no-wrap
msgid "echo"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:675
#, no-wrap
msgid ""
"Now that the file exists, let's add some data to the file. We can do this using\n"
"the echo command, which takes its arguments and prints them to standard output.\n"
"First, the echo command by itself:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:680
#, no-wrap
msgid "Creating a file using 'echo'"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:681
#, no-wrap
msgid ""
"$ <i>echo \"firstfile\"</i>\n"
"firstfile\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:686
#, no-wrap
msgid "Now, the same echo command with output redirection:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:689
#, no-wrap
msgid "Using output redirection"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:690
#, no-wrap
msgid "$ <i>echo \"firstfile\" &gt; copyme</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:694
#, no-wrap
msgid ""
"The greater-than sign tells the shell to write echo's output to a file called\n"
"copyme. This file will be created if it doesn't exist, and will be overwritten\n"
"if it does exist. By typing <c>ls -l</c>, we can see that the copyme file is 10\n"
"bytes long, since it contains the word firstfile and the newline character:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:700
#, no-wrap
msgid "Viewing file information"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:701
#, no-wrap
msgid ""
"$ <i>ls -l copyme</i>\n"
"-rw-r--r--    1 root     root           10 Dec 28 14:13 copyme\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:708
#, no-wrap
msgid "cat and cp"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:712
#, no-wrap
msgid "To display the contents of the file on the terminal, use the cat command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:715
#, no-wrap
msgid "Viewing file contents"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:716
#, no-wrap
msgid ""
"$ <i>cat copyme</i>\n"
"firstfile\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:721
#, no-wrap
msgid ""
"Now, we can use a basic invocation of the <c>cp</c> command to create a copiedme\n"
"file from the original copyme file:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:725
#, no-wrap
msgid "Copying files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:726
#, no-wrap
msgid "$ <i>cp copyme copiedme</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:730
#, no-wrap
msgid "Upon investigation, we find that they are truly separate files; their inode numbers are different:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:733
#, no-wrap
msgid "Checking inode differences"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:734
#, no-wrap
msgid ""
"$ <i>ls -i copyme copiedme</i>\n"
"  648284 copiedme   650704 copyme\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:741
#, no-wrap
msgid "mv"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:745
#, no-wrap
msgid ""
"Now, let's use the mv command to rename \"copiedme\" to\n"
"\"movedme\". The inode number will remain the same; however, the\n"
"filename that points to the inode will change.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:750
#, no-wrap
msgid "Renaming a file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:751
#, no-wrap
msgid ""
"$ <i>mv copiedme movedme</i>\n"
"$ <i>ls -i movedme</i>\n"
"  648284 movedme\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:757
#, no-wrap
msgid ""
"A moved file's inode number will remain the same as long as the destination file\n"
"resides on the same file system as the source file. We'll take a closer look at\n"
"file systems in Part 3 of this tutorial series.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:763
#, no-wrap
msgid ""
"While we're talking about mv, let's look at another way to use this command. mv,\n"
"in addition to allowing us to rename files, also allows us to move one or more\n"
"files to another location in the directory hierarchy. For example, to move\n"
"<path>/var/tmp/myfile.txt</path> to <path>/home/drobbins</path> (which happens\n"
"to be my home directory,) I could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:770
#, no-wrap
msgid "Moving a file to a different location"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:771
#, no-wrap
msgid "$ <i>mv /var/tmp/myfile.txt /home/drobbins</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:775
#, no-wrap
msgid ""
"After typing this command, myfile.txt will be moved to\n"
"<path>/home/drobbins/myfile.txt</path>. And if <path>/home/drobbins</path> is on\n"
"a different file system than <path>/var/tmp</path>, the mv command will handle\n"
"the copying of myfile.txt to the new file system and erasing it from the old\n"
"file system. As you might guess, when myfile.txt is moved between file systems,\n"
"the myfile.txt at the new location will have a new inode number. This is because\n"
"every file system has its own independent set of inode numbers.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:785
#, no-wrap
msgid ""
"We can also use the mv command to move multiple files to a single destination\n"
"directory. For example, to move myfile1.txt and myarticle3.txt to \n"
"/home/drobbins, I could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:790
#, no-wrap
msgid "Moving multiple files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:791
#, no-wrap
msgid "$ <i>mv /var/tmp/myfile1.txt /var/tmp/myarticle3.txt /home/drobbins</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:798
#, no-wrap
msgid "Creating Links and Removing Files"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:800
#, no-wrap
msgid "Hard links"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:804
#, no-wrap
msgid ""
"We've mentioned the term \"link\" when referring to the relationship\n"
"between directory entries (the \"names\" we type) and inodes (the\n"
"index numbers on the underlying file system that we can usually ignore.) There are\n"
"actually two kinds of links available on Linux. The kind we've discussed so far\n"
"are called <e>hard links</e>. A given inode can have any number of hard links,\n"
"and the inode will persist on the file system until the all the hard links\n"
"disappear. When the last hard link disappears and no program is holding the file\n"
"open, Linux will delete the file automatically. New hard links can be created\n"
"using the <c>ln</c> command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:815
#, no-wrap
msgid "Linking files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:816
#, no-wrap
msgid ""
"$ <i>cd /tmp</i>\n"
"$ <i>touch firstlink</i>\n"
"$ <i>ln firstlink secondlink</i>\n"
"$ <i>ls -i firstlink secondlink</i>\n"
"  15782 firstlink    15782 secondlink\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:824
#, no-wrap
msgid ""
"As you can see, hard links work on the inode level to point to a particular file.\n"
"On Linux systems, hard links have several limitations. For one, you can only\n"
"make hard links to files, not directories. That's right; even though . and ..\n"
"are system-created hard links to directories, you (even as the\n"
"\"root\" user) aren't allowed to create any of your own. The second\n"
"limitation of hard links is that they can't span file systems. This means that\n"
"you can't create a link from /usr/bin/bash to /bin/bash if your / and /usr\n"
"directories exist on separate file systems.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:837
#, no-wrap
msgid "Symbolic links"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:841
#, no-wrap
msgid ""
"In practice, symbolic links (or <e>symlinks</e>) are used more often than hard\n"
"links. Symlinks are a special file type where the link refers to another file by\n"
"name, rather than directly to the inode. Symlinks do not prevent a file from\n"
"being deleted; if the target file disappears, then the symlink will just be\n"
"unusable, or broken.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:849
#, no-wrap
msgid "A symbolic link can be created by passing the -s option to ln.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:852
#, no-wrap
msgid "Viewing symbolic links"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:853
#, no-wrap
msgid ""
"$ ln -s secondlink thirdlink\n"
"$ ls -l firstlink secondlink thirdlink\n"
"-rw-rw-r--    2 agriffis agriffis        0 Dec 31 19:08 firstlink\n"
"-rw-rw-r--    2 agriffis agriffis        0 Dec 31 19:08 secondlink\n"
"lrwxrwxrwx    1 agriffis agriffis       10 Dec 31 19:39 thirdlink -&gt; secondlink\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:861
#, no-wrap
msgid ""
"Symbolic links can be distinguished in <c>ls -l</c> output from normal files in\n"
"three ways. First, notice that the first column contains an l character to\n"
"signify the symbolic link. Second, the size of the symbolic link is the number\n"
"of characters in the target (<c>secondlink</c>, in this case). Third, the last\n"
"column of the output displays the target filename preceded by a cute little -&gt;.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:871
#, no-wrap
msgid "Symlinks in-depth"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:875
#, no-wrap
msgid ""
"Symbolic links are generally more flexible than hard links. You can create a\n"
"symbolic link to any type of file system object, including directories. And\n"
"because the implementation of symbolic links is based on paths (not inodes),\n"
"it's perfectly fine to create a symbolic link that points to an object on \n"
"another physical file system. However, this fact can also make symbolic links\n"
"tricky to understand.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:884
#, no-wrap
msgid ""
"Consider a situation where we want to create a link in /tmp that points to \n"
"/usr/local/bin. Should we type this:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:888
#, no-wrap
msgid "Linking directories, first attempt"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:889
#, no-wrap
msgid ""
"$ <i>ln -s /usr/local/bin bin1</i>\n"
"$ <i>ls -l bin1</i>\n"
"lrwxrwxrwx    1 root     root           14 Jan  1 15:42 bin1 -&gt; /usr/local/bin\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:895
#, no-wrap
msgid "Or alternatively:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:898
#, no-wrap
msgid "Linking directories, second attempt"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:899
#, no-wrap
msgid ""
"$ <i>ln -s ../usr/local/bin bin2</i>\n"
"$ <i>ls -l bin2</i>\n"
"lrwxrwxrwx    1 root     root           16 Jan  1 15:43 bin2 -&gt; ../usr/local/bin\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:905
#, no-wrap
msgid ""
"As you can see, both symbolic links point to the same directory. However, if our\n"
"second symbolic link is ever moved to another directory, it will be\n"
"\"broken\" because of the relative path:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:910
#, no-wrap
msgid "Breaking a symbolic link"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:911
#, no-wrap
msgid ""
"$ <i>ls -l bin2</i>\n"
"lrwxrwxrwx    1 root     root           16 Jan  1 15:43 bin2 -&gt; ../usr/local/bin\n"
"$ <i>mkdir mynewdir</i>\n"
"$ <i>mv bin2 mynewdir</i>\n"
"$ <i>cd mynewdir</i>\n"
"$ <i>cd bin2</i>\n"
"bash: cd: bin2: No such file or directory\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:921
#, no-wrap
msgid ""
"Because the directory /tmp/usr/local/bin doesn't exist, we can no longer change\n"
"directories into bin2; in other words, bin2 is now broken.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:926
#, no-wrap
msgid ""
"For this reason, it is sometimes a good idea to avoid creating symbolic links\n"
"with relative path information. However, there are many cases where relative\n"
"symbolic links come in handy. Consider an example where you want to create an\n"
"alternate name for a program in /usr/bin:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:932
#, no-wrap
msgid "Viewing file information for keychain"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:933
#, no-wrap
msgid ""
"# <i>ls -l /usr/bin/keychain</i> \n"
"-rwxr-xr-x    1 root     root        10150 Dec 12 20:09 /usr/bin/keychain\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:938
#, no-wrap
msgid ""
"As the root user, you may want to create an alternate name for \n"
"\"keychain\", such as \"kc\". In this example, we have\n"
"root access, as evidenced by our bash prompt changing to \"#\". We\n"
"need root access because normal users aren't able to create files in /usr/bin.\n"
"As root, we could create an alternate name for keychain as follows:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:945
#, no-wrap
msgid "Symlinking keychain"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:946
#, no-wrap
msgid ""
"# <i>cd /usr/bin</i>\n"
"# <i>ln -s /usr/bin/keychain kc</i>\n"
"# <i>ls -l keychain</i>\n"
"-rwxr-xr-x    1 root     root        10150 Dec 12 20:09 /usr/bin/keychain\n"
"# <i>ls -l kc</i>       \n"
"lrwxrwxrwx    1 root     root           17 Mar 27 17:44 kc -&gt; /usr/bin/keychain\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:955
#, no-wrap
msgid ""
"In this example, we created a symbolic link called kc that points to the file\n"
"/usr/bin/keychain.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:960
#, no-wrap
msgid ""
"While this solution will work, it will create problems if we decide that we want\n"
"to move both files, /usr/bin/keychain and /usr/bin/kc to /usr/local/bin:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:964
#, no-wrap
msgid "Moving the symbolic link"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:965
#, no-wrap
msgid ""
"# <i>mv /usr/bin/keychain /usr/bin/kc /usr/local/bin</i>\n"
"# <i>ls -l /usr/local/bin/keychain</i>\n"
"-rwxr-xr-x    1 root     root        10150 Dec 12 20:09 /usr/local/bin/keychain\n"
"# <i>ls -l /usr/local/bin/kc</i>\n"
"lrwxrwxrwx    1 root     root           17 Mar 27 17:44 kc -&gt; /usr/bin/keychain\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:973
#, no-wrap
msgid ""
"Because we used an absolute path in our symbolic link, our kc symlink is still\n"
"pointing to /usr/bin/keychain, which no longer exists since we moved\n"
"/usr/bin/keychain to /usr/local/bin.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:979
#, no-wrap
msgid ""
"That means that kc is now a broken symlink. Both relative and absolute paths in\n"
"symbolic links have their merits, and you should use a type of path that's\n"
"appropriate for your particular application. Often, either a relative or absolute\n"
"path will work just fine. The following example would have worked even after both\n"
"files were moved:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:986
#, no-wrap
msgid "Moving files around with symlinks"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:987
#, no-wrap
msgid ""
"# <i>cd /usr/bin</i>\n"
"# <i>ln -s keychain kc</i>\n"
"# <i>ls -l kc</i>\n"
"lrwxrwxrwx    1 root     root            8 Jan  5 12:40 kc -&gt; keychain\n"
"# <i>mv keychain kc /usr/local/bin</i>\n"
"# <i>ls -l /usr/local/bin/keychain</i>\n"
"-rwxr-xr-x    1 root     root        10150 Dec 12 20:09 /usr/local/bin/keychain\n"
"# <i>ls -l /usr/local/bin/kc</i>\n"
"lrwxrwxrwx    1 root     root           17 Mar 27 17:44 kc -&gt; keychain\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:999
#, no-wrap
msgid ""
"Now, we can run the keychain program by typing /usr/local/bin/kc.\n"
"/usr/local/bin/kc points to the program keychain in the same directory as kc.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1006
#, no-wrap
msgid "rm"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1010
#, no-wrap
msgid ""
"Now that we know how to use cp, mv, and ln, it's time to learn how to remove\n"
"objects from the file system. Normally, this is done with the <c>rm</c> command.\n"
"To remove files, simply specify them on the command line:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1015
#, no-wrap
msgid "Removing files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1016
#, no-wrap
msgid ""
"$ <i>cd /tmp</i>\n"
"$ <i>touch file1 file2</i>\n"
"$ <i>ls -l file1 file2</i>\n"
"-rw-r--r--    1 root     root            0 Jan  1 16:41 file1\n"
"-rw-r--r--    1 root     root            0 Jan  1 16:41 file2\n"
"$ <i>rm file1 file2</i>\n"
"$ <i>ls -l file1 file2</i>\n"
"ls: file1: No such file or directory\n"
"ls: file2: No such file or directory\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1028
#, no-wrap
msgid ""
"Note that under Linux, once a file is rm'ed, it's typically gone forever. For\n"
"this reason, many junior system administrators will use the -i option when\n"
"removing files. The -i option tells rm to remove all files in interactive mode\n"
"-- that is, prompt before removing any file. For example:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1034
#, no-wrap
msgid "Removing files and ask for confirmation"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1035
#, no-wrap
msgid ""
"$ <i>rm -i file1 file2</i>\n"
"rm: remove regular empty file `file1'? y\n"
"rm: remove regular empty file `file2'? y\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1041
#, no-wrap
msgid ""
"In the above example, the rm command prompted whether or not the specified files\n"
"should *really* be deleted. In order for them to be deleted, I had to type\n"
"\"y\" and Enter twice. If I had typed \"n\", the file\n"
"would not have been removed. Or, if I had done something really wrong, I could\n"
"have typed Control-C to abort the rm -i command entirely -- all before it is\n"
"able to do any potential damage to my system.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1050
#, no-wrap
msgid ""
"If you are still getting used to the rm command, it can be useful to add the\n"
"following line to your ~/.bashrc file using your favorite text editor, and then\n"
"log out and log back in. Then, any time you type rm, the bash shell will convert\n"
"it automatically to an rm -i command. That way, rm will always work in\n"
"interactive mode:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1057
#, no-wrap
msgid "Setting the 'rm -i' alias"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1058
#, no-wrap
msgid "<i>alias rm=\"rm -i\"</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1064
#, no-wrap
msgid "rmdir"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1068
#, no-wrap
msgid ""
"To remove directories, you have two options. You can remove all the objects\n"
"inside the directory and then use <c>rmdir</c> to remove the directory itself:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1072
#, no-wrap
msgid "Removing directories"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1073
#, no-wrap
msgid ""
"$ <i>mkdir mydir</i>\n"
"$ <i>touch mydir/file1</i>\n"
"$ <i>rm mydir/file1</i>\n"
"$ <i>rmdir mydir</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1080
#, no-wrap
msgid ""
"This method is commonly referred to as \"directory removal for\n"
"suckers.\" All real power users and administrators worth their salt use\n"
"the much more convenient <c>rm -rf</c> command, covered next.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1086
#, no-wrap
msgid ""
"The best way to remove a directory is to use the <e>recursive force</e> options\n"
"of the rm command to tell rm to remove the directory you specify, as well as all\n"
"objects contained in the directory:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1091
#, no-wrap
msgid "Removing a complete directory"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1092
#, no-wrap
msgid "$ <i>rm -rf mydir</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1096
#, no-wrap
msgid ""
"Generally, rm -rf is the preferred method of removing a directory tree. Be very\n"
"careful when using rm -rf, since its power can be used for both good and evil :)\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1104
#, no-wrap
msgid "Using Wild cards"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1106
#, no-wrap
msgid "Introducing Wild cards"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1110
#, no-wrap
msgid ""
"In your day-to-day Linux use, there are many times when you may need to perform\n"
"a single operation (such as rm) on many file system objects at once. In these\n"
"situations, it can often be cumbersome to type in many files on the command line:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1115
#, no-wrap
msgid "Removing individual files"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1116
#, no-wrap
msgid "$ <i>rm file1 file2 file3 file4 file5 file6 file7 file8</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1120
#, no-wrap
msgid ""
"To solve this problem, you can take advantage of Linux' built-in wild card\n"
"support. This support, also called \"globbing\" (for historical\n"
"reasons), allows you to specify multiple files at once by using a <e>wildcat\n"
"pattern</e>. Bash and other Linux commands will interpret this pattern by\n"
"looking on disk and finding any files that match it. So, if you had files file1\n"
"through file8 in the current working directory, you could remove these files by\n"
"typing:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1129
#, no-wrap
msgid "Removing files using shell completion"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1130
#, no-wrap
msgid "$ <i>rm file[1-8]</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1134
#, no-wrap
msgid ""
"Or if you simply wanted to remove all files whose names begin with file as well\n"
"as any file named file, you could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1138
#, no-wrap
msgid "Removing files using shell completion with the * glob"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1139
#, no-wrap
msgid "$ <i>rm file*</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1143
#, no-wrap
msgid ""
"The * wildcat matches any character or sequence of characters, or even\n"
"\"no character.\" Of course, glob wildcards can be used for more\n"
"than simply removing files, as we'll see in the next panel.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1151
#, no-wrap
msgid "Understanding non-matches"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1155
#, no-wrap
msgid ""
"If you wanted to list all the file system objects in /etc beginning with g as\n"
"well as any file called g, you could type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1159
#, no-wrap
msgid "Example use of the * glob"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1160
#, no-wrap
msgid ""
"$ <i>ls -d /etc/g*</i>\n"
"/etc/gconf  /etc/ggi  /etc/gimp  /etc/gnome  /etc/gnome-vfs-mime-magic  /etc/gpm  /etc/group  /etc/group-\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1165
#, no-wrap
msgid ""
"Now, what happens if you specify a pattern that doesn't match any file system\n"
"objects? In the following example, we try to list all the files in /usr/bin that\n"
"begin with asdf and end with jkl, including potentially the file asdfjkl:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1170
#, no-wrap
msgid "Another example of the * glob"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1171
#, no-wrap
msgid ""
"$ <i>ls -d /usr/bin/asdf*jkl</i>\n"
"ls: /usr/bin/asdf*jkl: No such file or directory\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1176
#, no-wrap
msgid ""
"Here's what happened. Normally, when we specify a pattern, that pattern matches\n"
"one or more files on the underlying file system, and <e>bash replaces the \n"
"pattern with a space-separated list of all matching objects</e>. However, when \n"
"the pattern doesn't produce any matches, <e>bash leaves the argument, wild \n"
"cards and all, as-is</e>. So, then ls can't find the file /usr/bin/asdf*jkl \n"
"and it gives us an error. The operative rule here is that <e>glob patterns \n"
"are expanded only if they match objects in the file system</e>. Otherwise \n"
"they remain as is and are passed literally to the program you're calling.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1189
#, no-wrap
msgid "Wild card syntax: * and ?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1193
#, no-wrap
msgid ""
"Now that we've seen how globbing works, we should look at wild card syntax. You\n"
"can use special characters for wild card expansion:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1198
#, no-wrap
msgid ""
"* will match zero or more characters. It means \"anything can go here,\n"
"including nothing\". Examples:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1204
#, no-wrap
msgid ""
"    /etc/g* matches all files in /etc that begin with g, or a file called g.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1207
#, no-wrap
msgid ""
"    /tmp/my*1 matches all files in /tmp that begin with my and end with 1,\n"
"    including the file my1.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1213
#, no-wrap
msgid "? matches any single character. Examples:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1218
#, no-wrap
msgid ""
"    myfile? matches any file whose name consists of myfile followed by a\n"
"    single character\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1222
#, no-wrap
msgid ""
"    /tmp/notes?txt would match both /tmp/notes.txt and /tmp/notes_txt, if they\n"
"    exist\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1230
#, no-wrap
msgid "Wild card syntax: []"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1234
#, no-wrap
msgid ""
"This wild card is like a ?, but it allows more specificity. To use this wild card,\n"
"place any characters you'd like to match inside the []. The resultant expression\n"
"will match a single occurrence of any of these characters. You can also use - to\n"
"specify a range, and even combine ranges. Examples:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1242
#, no-wrap
msgid ""
"    myfile[12] will match myfile1 and myfile2. The wild card will be expanded\n"
"    as long as at least one of these files exists in the current directory.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1246
#, no-wrap
msgid ""
"    [Cc]hange[Ll]og will match Changelog, ChangeLog, changeLog, and changelog.\n"
"    As you can see, using bracket wild cards can be useful for matching\n"
"    variations in capitalization.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1251
#, no-wrap
msgid ""
"    ls /etc/[0-9]* will list all files in /etc that begin with a number.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1254
#, no-wrap
msgid ""
"    ls /tmp/[A-Za-z]* will list all files in /tmp that begin with an upper or\n"
"    lower-case letter.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1260
#, no-wrap
msgid ""
"The [!] construct is similar to the [] construct, except rather than matching\n"
"any characters inside the brackets, it'll match any character, as long as it is\n"
"not listed between the [! and ]. Example:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1267
#, no-wrap
msgid ""
"    rm myfile[!9] will remove all files named myfile plus a single character,\n"
"    except for myfile9\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1275
#, no-wrap
msgid "Wild card caveats"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1279
#, no-wrap
msgid ""
"Here are some caveats to watch out for when using wild cards. Since bash treats\n"
"wild card-related characters (?, [, ], and *) specially, you need to take \n"
"special care when typing in an argument to a command that contains these \n"
"characters. For example, if you want to create a file that contains the \n"
"string [fo]*, the following command may not do what you want:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1286
#, no-wrap
msgid "Wrong use of special characters"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1287
#, no-wrap
msgid "$ <i>echo [fo]* &gt; /tmp/mynewfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1291
#, no-wrap
msgid ""
"If the pattern [fo]* matches any files in the current working directory, then\n"
"you'll find the names of those files inside /tmp/mynewfile.txt rather than a\n"
"literal [fo]* like you were expecting. The solution? Well, one approach is to\n"
"surround your characters with single quotes, which tell bash to perform\n"
"absolutely no wild card expansion on them:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1298
#, no-wrap
msgid "Escaping special characters"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1299
#, no-wrap
msgid "$ <i>echo '[fo]*' &gt; /tmp/mynewfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1303
#, no-wrap
msgid ""
"Using this approach, your new file will contain a literal [fo]* as expected.\n"
"Alternatively, you could use backslash escaping to tell bash that [, ], and *\n"
"should be treated literally rather than as wild cards:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1308
#, no-wrap
msgid "Escapting special characters, second possibility"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/lpi-101-fundamentals-p1.xml:1309
#, no-wrap
msgid "$ <i>echo \\[fo\\]\\* &gt; /tmp/mynewfile.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1313
#, no-wrap
msgid ""
"Both approaches (single quotes and backslash escaping) have the same effect.\n"
"Since we're talking about backslash expansion, now would be a good time to\n"
"mention that in order to specify a literal \\, you can either enclose it in \n"
"single quotes as well, or type \\\\ instead (it will be expanded to \\).\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><note>
#: en/articles/lpi-101-fundamentals-p1.xml:1320
#, no-wrap
msgid ""
"Double quotes will work similarly to single quotes, but will still\n"
"allow bash to do some limited expansion. Therefore, single quotes are your best\n"
"bet when you are truly interested in passing literal text to a command. For more\n"
"information on wild card expansion, type <c>man 7 glob</c>. For more information\n"
"on quoting in bash, type <c>man 8 glob</c> and read the section titled QUOTING.\n"
"If you're planning to take the LPI exams, consider this a homework assignment :)\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1333
#, no-wrap
msgid "Summary and Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1335
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1339
#, no-wrap
msgid ""
"Congratulations; you've reached the end of our review of Linux fundamentals! I\n"
"hope that it has helped you to firm up your foundational Linux knowledge. The\n"
"topics you've learned here, including the basics of bash, basic Linux commands,\n"
"links, and wild cards, have laid the groundwork for our next tutorial on basic\n"
"administration, in which we'll cover topics like regular expressions, ownership\n"
"and permissions, user account management, and more.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1348
#, no-wrap
msgid ""
"By continuing in this tutorial series, you'll soon be ready to attain your LPIC\n"
"Level 1 Certification from the Linux Professional Institute. Speaking of LPIC\n"
"certification, if this is something you're interested in, then we recommend that\n"
"you study the Resources in the next panel, which have been carefully selected to\n"
"augment the material covered in this tutorial.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/lpi-101-fundamentals-p1.xml:1358
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1362
#, no-wrap
msgid ""
"In the \"Bash by example\" article series on developerWorks, Daniel shows you how\n"
"to use bash programming constructs to write your own bash scripts. This series\n"
"(particularly Parts 1 and 2) will be good preparation for the LPIC Level 1 exam:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1369
#, no-wrap
msgid ""
"    <uri link=\"/doc/en/articles/bash-by-example-p1.xml\">Bash by example, Part\n"
"    1: Fundamental programming in the Bourne-again shell</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1373
#, no-wrap
msgid ""
"    <uri link=\"/doc/en/articles/bash-by-example-p2.xml\">Bash by example, Part\n"
"    2: More bash programming fundamentals</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/lpi-101-fundamentals-p1.xml:1377
#, no-wrap
msgid ""
"    <uri link=\"/doc/en/articles/bash-by-example-p3.xml\">Bash by example, Part\n"
"    3: Exploring the ebuild system</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1383
#, no-wrap
msgid ""
"If you're a beginning or intermediate Linux user, you really owe it to yourself\n"
"to check out the Technical FAQ for Linux users, a 50-page in-depth list of\n"
"frequently-asked Linux questions, along with detailed answers. The FAQ itself is\n"
"in PDF (Acrobat) format.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/lpi-101-fundamentals-p1.xml:1390
#, no-wrap
msgid ""
"If you're not too familiar with the vi editor, see the developerWorks tutorial\n"
"Intro to vi. This tutorial gives you a gentle yet fast-paced introduction to\n"
"this powerful text editor. Consider this must-read material if you don't know\n"
"how to use vi.\n"
msgstr ""
