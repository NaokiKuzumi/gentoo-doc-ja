# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/l-sed3.xml:6
#, no-wrap
msgid "Sed by example, Part 3"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/l-sed3.xml:13
#, no-wrap
msgid ""
"In this conclusion of the sed series, Daniel Robbins gives you a true taste of\n"
"the power of sed. After introducing a handful of essential sed scripts, he'll\n"
"demonstrate some radical sed scripting by converting a Quicken .QIF file into a\n"
"text-readable format. This conversion script is not only functional, it also\n"
"serves as en excellent example of sed scripting power.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/l-sed3.xml:29
#, no-wrap
msgid "Taking it to the next level: Data crunching, sed style"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:31
#, no-wrap
msgid "Muscular sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:35
#, no-wrap
msgid ""
"In <uri link=\"l-sed2.xml\">my second sed article</uri>, I\n"
"offered examples that demonstrated how sed works, but very few of these examples\n"
"actually did anything particularly useful. In this final sed article, it's time\n"
"to change that pattern and put sed to good use. I'll show you several excellent\n"
"examples that not only demonstrate the power of sed, but also do some really\n"
"neat (and handy) things. For example, in the second half of the article, I'll\n"
"show you how I designed a sed script that converts a .QIF file from Intuit's\n"
"Quicken financial program into a nicely formatted text file. Before doing that,\n"
"we'll take a look at some less complicated yet useful sed scripts.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:49
#, no-wrap
msgid "Text translation"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:53
#, no-wrap
msgid ""
"Our first practical script converts UNIX-style text to DOS/Windows format. As\n"
"you probably know, DOS/Windows-based text files have a CR (carriage return) and\n"
"LF (line feed) at the end of each line, while UNIX text has only a line feed.\n"
"There may be times when you need to move some UNIX text to a Windows system, and\n"
"this script will perform the necessary format conversion for you.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:60
#, no-wrap
msgid "Format conversion between UNIX and Windows"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:61
#, no-wrap
msgid "$ <i>sed -e 's/$/\\r/' myunix.txt > mydos.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:65
#, no-wrap
msgid ""
"In this script, the '$' regular expression will match the end of the line, and\n"
"the '\\r' tells sed to insert a carriage return right before it. Insert a\n"
"carriage return before a line feed, and presto, a CR/LF ends each line. Please\n"
"note that the '\\r' will be replaced with a CR only when using GNU sed 3.02.80 or\n"
"later. If you haven't installed GNU sed 3.02.80 yet, see <uri\n"
"link=\"l-sed1.xml\">my first sed article</uri> for instructions on\n"
"how to do this.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:75
#, no-wrap
msgid ""
"I can't tell you how many times I've downloaded some example script or C code,\n"
"only to find that it's in DOS/Windows format. While many programs don't mind\n"
"DOS/Windows format CR/LF text files, several programs definitely do -- the most\n"
"notable being bash, which chokes as soon as it encounters a carriage return. The\n"
"following sed invocation will convert DOS/Windows format text to trusty UNIX\n"
"format:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:83
#, no-wrap
msgid "Converting C code from Windows to UNIX format"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:84
#, no-wrap
msgid "$ <i>sed -e 's/.$//' mydos.txt > myunix.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:88
#, no-wrap
msgid ""
"The way this script works is simple: our substitution regular expression matches\n"
"the last character on the line, which happens to be a carriage return. We\n"
"replace it with nothing, causing it to be deleted from the output entirely. If\n"
"you use this script and notice that the last character of every line of the\n"
"output has been deleted, you've specified a text file that's already in UNIX\n"
"format. No need for that!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:99
#, no-wrap
msgid "Reversing lines"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:103
#, no-wrap
msgid ""
"Here's another handy little script. This one will reverse lines in a file,\n"
"similar to the \"tac\" command that's included with most Linux distributions. The\n"
"name \"tac\" may be a bit misleading, because \"tac\" doesn't reverse the position\n"
"of characters on the line (left and right), but rather the position of lines in\n"
"the file (up and down). Tacing the following file:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:110
#, no-wrap
msgid "Sample file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:111
#, no-wrap
msgid ""
"foo\n"
"bar\n"
"oni\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:117
#, no-wrap
msgid "....produces the following output:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:120
#, no-wrap
msgid "Output file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:121
#, no-wrap
msgid ""
"oni\n"
"bar\n"
"foo\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:127
#, no-wrap
msgid "We can do the same thing with the following sed script:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:130
#, no-wrap
msgid "Doing same with script"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:131
#, no-wrap
msgid "$ <i>sed -e '1!G;h;$!d' forward.txt > backward.txt</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:135
#, no-wrap
msgid ""
"You'll find this sed script useful if you're logged in to a FreeBSD system,\n"
"which doesn't happen to have a \"tac\" command. While handy, it's also a good idea\n"
"to know why this script does what it does. Let's dissect it.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:143
#, no-wrap
msgid "Reversal explained"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:147
#, no-wrap
msgid ""
"First, this script contains three separate sed commands, separated by\n"
"semicolons: '1!G', 'h' and '$!d'. Now, it's time to get an good understanding of\n"
"the addresses used for the first and third commands. If the first command were\n"
"'1G', the 'G' command would be applied only to the first line. However, there is\n"
"an additional '!' character -- this '!' character negates the address, meaning\n"
"that the 'G' command will apply to all but the first line. For the '$!d'\n"
"command, we have a similar situation. If the command were '$d', it would apply\n"
"the 'd' command to only the last line in the file (the '$' address is a simple\n"
"way of specifying the last line). However, with the '!', '$!d' will apply the\n"
"'d' command to all but the last line. Now, all we need to to is understand what\n"
"the commands themselves do.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:161
#, no-wrap
msgid ""
"When we execute our line reversal script on the text file above, the first\n"
"command that gets executed is 'h'. This command tells sed to copy the contents\n"
"of the pattern space (the buffer that holds the current line being worked on) to\n"
"the hold space (a temporary buffer). Then, the 'd' command is executed, which\n"
"deletes \"foo\" from the pattern space, so it doesn't get printed after all the\n"
"commands are executed for this line.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:170
#, no-wrap
msgid ""
"Now, line two. After \"bar\" is read into the pattern space, the 'G' command is\n"
"executed, which appends the contents of the hold space (\"foo\\n\") to the pattern\n"
"space (\"bar\\n\"), resulting in \"bar\\n\\foo\\n\" in our pattern space. The 'h'\n"
"command puts this back in the hold space for safekeeping, and 'd' deletes the\n"
"line from the pattern space so that it isn't printed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:178
#, no-wrap
msgid ""
"For the last \"oni\" line, the same steps are repeated, except that the contents\n"
"of the pattern space aren't deleted (due to the '$!' before the 'd'), and the\n"
"contents of the pattern space (three lines) are printed to stdout.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:184
#, no-wrap
msgid "Now, it's time to do some powerful data conversion with sed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:190
#, no-wrap
msgid "sed QIF magic"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:194
#, no-wrap
msgid ""
"For the last few weeks, I've been thinking about purchasing a copy of Quicken to\n"
"balance my bank accounts. Quicken is a very nice financial program, and would\n"
"certainly perform the job with flying colors. But, after thinking about it, I\n"
"decided that I could easily write some software that would balance my checkbook.\n"
"After all, I reasoned, I'm a software developer!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:202
#, no-wrap
msgid ""
"I developed a nice little checkbook balancing program (using awk) that\n"
"calculates by balance by parsing a text file containing all my transactions.\n"
"After a bit of tweaking, I improved it so that I could keep track of different\n"
"credit and debit categories, just like Quicken can. But, there was one more\n"
"feature I wanted to add. I recently switched my accounts to a bank that has an\n"
"online Web account interface. One day, I noticed that my bank's Web site allowed\n"
"me to to download my account information in Quicken's .QIF format. In very\n"
"little time, I decided that it would be really neat if I could convert this\n"
"information into text format.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:216
#, no-wrap
msgid "A tale of two formats"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:220
#, no-wrap
msgid ""
"Before we look at the QIF format, here's what my checkbook.txt format looks\n"
"like:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:224
#, no-wrap
msgid "Sample of QIF format"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:225
#, no-wrap
msgid ""
"28 Aug 2000     food    -       -       Y     Supermarket             30.94\n"
"25 Aug 2000     watr    -       103     Y     Check 103               52.86\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:230
#, no-wrap
msgid ""
"In my file, all fields are separated by one or more tabs, with one transaction\n"
"per line. After the date, the next field lists the type of expense (or \"-\" if\n"
"this is an income item). The third field lists the type of income (or \"-\" if\n"
"this is an expense item). Then, there's a check number field (again, \"-\" if\n"
"empty), a transaction cleared field (\"Y\" or \"N\"), a comment and a dollar amount.\n"
"Now, we're ready to take a look at the QIF format. When I viewed my downloaded\n"
"QIF file in a text viewer, this is what I saw:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:239
#, no-wrap
msgid "Malformed file output"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:240
#, no-wrap
msgid ""
"!Type:Bank\n"
"D08/28/2000\n"
"T-8.15\n"
"N\n"
"PCHECKCARD SUPERMARKET\n"
"^\n"
"D08/28/2000\n"
"T-8.25\n"
"N\n"
"PCHECKCARD PUNJAB RESTAURANT\n"
"^\n"
"D08/28/2000\n"
"T-17.17\n"
"N\n"
"PCHECKCARD SUPERMARKET\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:258
#, no-wrap
msgid ""
"After scanning the file, wasn't very hard to figure out the format -- ignoring\n"
"the first line, the format is as follows:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:262
#, no-wrap
msgid "File format"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:263
#, no-wrap
msgid ""
"D&lt;date&gt;\n"
"T&lt;transaction amount&gt;\n"
"N&lt;check number&gt;\n"
"P&lt;description&gt;\n"
"^\n"
"<comment>(this is the field separator)</comment>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:274
#, no-wrap
msgid "Starting the process"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:278
#, no-wrap
msgid ""
"When you're tackling a significant sed project like this, don't get discouraged\n"
"-- sed allows you to gradually massage the data into its final form. As you\n"
"progress, you can continue to refine your sed script until your output appears\n"
"exactly as intended. You don't need to get it exactly right on the first try.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:285
#, no-wrap
msgid ""
"To start off, I created a file called <path>qiftrans.sed</path>, and started\n"
"massaging the data:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:289
#, no-wrap
msgid "qiftrans.sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:290
#, no-wrap
msgid ""
"1d\n"
"/^^/d\n"
"s/[[:cntrl:]]//g\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:296
#, no-wrap
msgid ""
"The first '1d' command deletes the first line, and the second command removes\n"
"those pesky '^' characters from the output. The last line removes any control\n"
"characters that may exist in the file. Since I'm dealing with a foreign file\n"
"format, I want to eliminate the risk of encountering any control characters\n"
"along the way. So far, so good. Now, it's time to add some processing punch to\n"
"this basic script:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:304
#, no-wrap
msgid "Improved basic script"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:305
#, no-wrap
msgid ""
"1d\n"
"/^^/d\n"
"s/[[:cntrl:]]//g\n"
"/^D/ {\n"
"  s/^D\\(.*\\)/\\1\\tOUTY\\tINNY\\t/\n"
"        s/^01/Jan/\n"
"        s/^02/Feb/\n"
"        s/^03/Mar/\n"
"        s/^04/Apr/\n"
"        s/^05/May/\n"
"        s/^06/Jun/\n"
"        s/^07/Jul/\n"
"        s/^08/Aug/\n"
"        s/^09/Sep/\n"
"        s/^10/Oct/\n"
"        s/^11/Nov/\n"
"        s/^12/Dec/\n"
"        s:^\\(.*\\)/\\(.*\\)/\\(.*\\):\\2 \\1 \\3: \n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:327
#, no-wrap
msgid ""
"First, I add a '/^D/' address so that sed will only begin processing when it\n"
"encounters the first character of the QIF date field, 'D'. All of the commands\n"
"in the curly braces will execute in order as soon as sed reads such a line into\n"
"its pattern space.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:334
#, no-wrap
msgid "The first line in the curly braces will transform a line that looks like:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:337
#, no-wrap
msgid "First line before change"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:338
#, no-wrap
msgid "D08/28/2000\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:342
#, no-wrap
msgid "into one that looks like this:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:345
#, no-wrap
msgid "First line after change"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:346
#, no-wrap
msgid "08/28/2000  OUTY  INNY\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:350
#, no-wrap
msgid ""
"Of course, this format isn't perfect right now, but that's OK. We'll gradually\n"
"refine the contents of the pattern space as we go. The next 12 lines have the\n"
"net effect of transforming the date to a three-letter format, with the last line\n"
"removing the three slashes from the date. We end up with this line:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:356
#, no-wrap
msgid "Final look of the line"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:357
#, no-wrap
msgid "Aug 28 2000  OUTY  INNY\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:361
#, no-wrap
msgid ""
"The OUTY and INNY fields are serving as placeholders and will get replaced\n"
"later. I can't specify them just yet, because if the dollar amount is negative,\n"
"I'll want to set OUTY and INNY to \"misc\" and \"-\", but if the dollar amount is\n"
"positive, I'll want to change them to \"-\" and \"inco\" respectively. Since the\n"
"dollar amount hasn't been read yet, I need to use placeholders for the time\n"
"being.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:372
#, no-wrap
msgid "Refinement"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:376
#, no-wrap
msgid "Now, it's time for some further refinement:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:379
#, no-wrap
msgid "Further refinement"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:380
#, no-wrap
msgid ""
"1d \n"
"/^^/d\n"
"s/[[:cntrl:]]//g \n"
"/^D/ { \n"
"        s/^D\\(.*\\)/\\1\\tOUTY\\tINNY\\t/ \n"
"        s/^01/Jan/ \n"
"        s/^02/Feb/ \n"
"        s/^03/Mar/ \n"
"        s/^04/Apr/ \n"
"        s/^05/May/ \n"
"        s/^06/Jun/ \n"
"        s/^07/Jul/ \n"
"        s/^08/Aug/ \n"
"        s/^09/Sep/ \n"
"        s/^10/Oct/ \n"
"        s/^11/Nov/ \n"
"        s/^12/Dec/ \n"
"        s:^\\(.*\\)/\\(.*\\)/\\(.*\\):\\2 \\1 \\3: \n"
"        N \n"
"        N \n"
"        N \n"
"        s/\\nT\\(.*\\)\\nN\\(.*\\)\\nP\\(.*\\)/NUM\\2NUM\\t\\tY\\t\\t\\3\\tAMT\\1AMT/ \n"
"        s/NUMNUM/-/ \n"
"        s/NUM\\([0-9]*\\)NUM/\\1/ \n"
"        s/\\([0-9]\\),/\\1/ \n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:409
#, no-wrap
msgid ""
"The next seven lines are a bit complicated, so we'll cover them in detail.\n"
"First, we have three 'N' commands in a row. The 'N' command tells sed to read\n"
"in the next line in the input and append it to our current pattern space. The\n"
"three 'N' commands cause the next three lines to be appended to our current\n"
"pattern space buffer, and now our line looks like this:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:416
#, no-wrap
msgid "New look of our lines"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:417
#, no-wrap
msgid "28 Aug 2000  OUTY  INNY  \\nT-8.15\\nN\\nPCHECKCARD SUPERMARKET\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:421
#, no-wrap
msgid ""
"Sed's pattern space got ugly -- we need to remove the extra newlines and\n"
"perform some additional formatting. To do this, we'll use the substitution\n"
"command. The pattern we want to match is:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:426
#, no-wrap
msgid "Removing extra lines and applying some additional formatting"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:427
#, no-wrap
msgid "'\\nT.*\\nN.*\\nP.*'\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:431
#, no-wrap
msgid ""
"This will match a newline, followed by a 'T', followed by zero or more\n"
"characters, followed by a newline, followed by an 'N', followed by any number of\n"
"characters and a newline, followed by a 'P', followed by any number of\n"
"characters. Phew! This regexp will match the entire contents of the three lines\n"
"we just appended to the pattern space. But we want to reformat this region, not\n"
"replace it entirely. The dollar amount, check number (if any) and description\n"
"need to reappear in our replacement string. To do this, we surround those\n"
"\"interesting parts\" with backslashed parentheses, so that we can refer to them\n"
"in our replacement string (using '\\1', '\\2\\, and '\\3' to tell sed where to\n"
"insert them). Here is the final command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:443
#, no-wrap
msgid "The final command"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:444
#, no-wrap
msgid "s/\\nT\\(.*\\)\\nN\\(.*\\)\\nP\\(.*\\)/NUM\\2NUM\\t\\tY\\t\\t\\3\\tAMT\\1AMT/\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:448
#, no-wrap
msgid "This command transforms our line into:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:451
#, no-wrap
msgid "Result of the above command"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:452
#, no-wrap
msgid "28 Aug 2000  OUTY  INNY  NUMNUM    Y     CHECKCARD SUPERMARKET AMT-8.15AMT\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:456
#, no-wrap
msgid ""
"While this line is getting better, there are a few things that at first glance\n"
"appear a bit...er...interesting. The first is that silly \"NUMNUM\" string -- what\n"
"purpose does that serve? You'll find out as you inspect the next two lines of\n"
"the sed script, which will replace \"NUMNUM\" with a \"-\", while\n"
"\"NUM\"&lt;number&gt;\"NUM\" will be replaced with &lt;number&gt;. As you can see,\n"
"surrounding the check number with a silly tag allows us to conveniently insert a\n"
"\"-\" if the field is empty.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:468
#, no-wrap
msgid "Finishing touches"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:472
#, no-wrap
msgid ""
"The last line removes a comma following a number. This converts dollar amounts\n"
"like \"3,231.00\" to \"3231.00\", which is the format I use. Now, it's time to take\n"
"a look at the final, production script:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:477
#, no-wrap
msgid "The final, production script"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:478
#, no-wrap
msgid ""
"1d\n"
"/^^/d\n"
"s/[[:cntrl:]]//g\n"
"/^D/ {\n"
"  s/^D\\(.*\\)/\\1\\tOUTY\\tINNY\\t/\n"
"  s/^01/Jan/\n"
"  s/^02/Feb/\n"
"  s/^03/Mar/\n"
"  s/^04/Apr/\n"
"  s/^05/May/\n"
"  s/^06/Jun/\n"
"  s/^07/Jul/\n"
"  s/^08/Aug/\n"
"  s/^09/Sep/\n"
"  s/^10/Oct/\n"
"  s/^11/Nov/\n"
"  s/^12/Dec/\n"
"  s:^\\(.*\\)/\\(.*\\)/\\(.*\\):\\2 \\1 \\3:\n"
"  N\n"
"  N\n"
"  N\n"
"  s/\\nT\\(.*\\)\\nN\\(.*\\)\\nP\\(.*\\)/NUM\\2NUM\\t\\tY\\t\\t\\3\\tAMT\\1AMT/\n"
"  s/NUMNUM/-/\n"
"  s/NUM\\([0-9]*\\)NUM/\\1/\n"
"  s/\\([0-9]\\),/\\1/\n"
"  /AMT-[0-9]*.[0-9]*AMT/b fixnegs\n"
"  s/AMT\\(.*\\)AMT/\\1/\n"
"  s/OUTY/-/\n"
"  s/INNY/inco/\n"
"  b done\n"
":fixnegs\n"
"  s/AMT-\\(.*\\)AMT/\\1/\n"
"  s/OUTY/misc/\n"
"  s/INNY/-/\n"
":done\n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:517
#, no-wrap
msgid ""
"The additional eleven lines use substitution and some branching functionality to\n"
"perfect the output. We'll want to take a look at this line first:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:521
#, no-wrap
msgid "First line worth looking at"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:522
#, no-wrap
msgid "        /AMT-[0-9]*.[0-9]*AMT/b fixnegs \n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:526
#, no-wrap
msgid ""
"This line contains a branch command, which is of the format \"/regexp/b label\".\n"
"If the pattern space matches the regexp, sed will branch to the fixnegs label.\n"
"You should be able to easily spot this label, which appears as \":fixnegs\" in the\n"
"code. If the regexp doesn't match, processing continues as normal with the next\n"
"command.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:534
#, no-wrap
msgid ""
"Now that you understand the workings of the command itself, let's take a look at\n"
"the branches. If you look at the branch regular expression, you'll see that it\n"
"will match the string 'AMT', followed by a '-', followed by any number of\n"
"digits, a '.', any number of digits and 'AMT'. As I'm sure you've figured out,\n"
"this regexp deals specifically with a negative dollar amount. Earlier, we\n"
"surrounded our dollar amount with 'AMT' strings so we could easily find it\n"
"later. Because the regexp only matches dollar amounts that begin with a '-', our\n"
"branch will only happen if we happen to be dealing with a debit. If we are\n"
"dealing with a debit, OUTY should be set to 'misc', INNY should be set to '-',\n"
"and the negative sign in front of the debit amount should be removed. If you\n"
"follow the code, you'll see that this is exactly what happens. If the branch\n"
"isn't executed, OUTY gets replaced with '-', and INNY gets replaced with 'inco'.\n"
"We're finished! Our output line is now perfect:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:549
#, no-wrap
msgid "The perfect output line"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed3.xml:550
#, no-wrap
msgid "28 Aug 2000  misc  -  -       Y     CHECKCARD SUPERMARKET  -8.15\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed3.xml:556
#, no-wrap
msgid "Don't get confused"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed3.xml:560
#, no-wrap
msgid ""
"As you can see, converting data using sed isn't all that hard, as long as you\n"
"approach the problem incrementally. Don't try to do everything with a single sed\n"
"command, or all at once. Instead, gradually work your way toward the goal, and\n"
"continue to enhance your sed script until your output looks just the way you\n"
"want it to. Sed packs a lot of punch, and I hope that you've become very\n"
"familiar with its inner workings and that you'll continue to grow in your sed\n"
"mastery!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed3.xml:571
#, no-wrap
msgid ""
"    Read Daniel's other sed articles from developerWorks: Common threads: Sed by\n"
"    example, <uri link=\"l-sed1.xml\">Part 1</uri> and <uri\n"
"    link=\"l-sed2.xml\">Part 2</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed3.xml:576
#, no-wrap
msgid ""
"    Check out Eric Pement's excellent <uri\n"
"    link=\"http://sed.sourceforge.net/sedfaq.html\">sed FAQ</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed3.xml:580
#, no-wrap
msgid ""
"     You can find the latest sources to sed at <uri>\n"
"     ftp://ftp.gnu.org/pub/gnu/sed</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed3.xml:584
#, no-wrap
msgid ""
"    Eric Pement also has a handy list of <uri\n"
"    link=\"http://sed.sourceforge.net/sed1line.txt\">sed one-liners</uri>\n"
"    that any aspiring sed guru should definitely look at.\n"
"  "
msgstr ""
