# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/l-sed1.xml:6
#, no-wrap
msgid "Sed by example, Part 1"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/l-sed1.xml:13
#, no-wrap
msgid ""
"In this series of articles, Daniel Robbins will show you how to use the very\n"
"powerful (but often forgotten) UNIX stream editor, sed. Sed is an ideal tool for\n"
"batch-editing files or for creating shell scripts to modify existing files in\n"
"powerful ways.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/l-sed1.xml:28
#, no-wrap
msgid "Get to know the powerful UNIX editor"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:30
#, no-wrap
msgid "Pick an editor"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:34
#, no-wrap
msgid ""
"In the UNIX world, we have a lot of options when it comes to editing files.\n"
"Think of it -- vi, emacs, and jed come to mind, as well as many others. We all\n"
"have our favorite editor (along with our favorite keybindings) that we have come\n"
"to know and love. With our trusty editor, we are ready to tackle any number of\n"
"UNIX-related administration or programming tasks with ease."
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:41
#, no-wrap
msgid ""
"While interactive editors are great, they do have limitations. Though their\n"
"interactive nature can be a strength, it can also be a weakness. Consider a\n"
"situation where you need to perform similar types of changes on a group of\n"
"files. You could instinctively fire up your favorite editor and perform a bunch\n"
"of mundane, repetitive, and time-consuming edits by hand. But there's a better\n"
"way.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:52
#, no-wrap
msgid "Enter sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:56
#, no-wrap
msgid ""
"It would be nice if we could automate the process of making edits to files, so\n"
"that we could \"batch\" edit files, or even write scripts with the ability to\n"
"perform sophisticated changes to existing files. Fortunately for us, for these\n"
"types of situations, there is a better way -- and the better way is called sed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:63
#, no-wrap
msgid ""
"sed is a lightweight stream editor that's included with nearly all UNIX flavors,\n"
"including Linux. sed has a lot of nice features. First of all, it's very\n"
"lightweight, typically many times smaller than your favorite scripting language.\n"
"Secondly, because sed is a stream editor, it can perform edits to data it\n"
"receives from stdin, such as from a pipeline. So, you don't need to have the\n"
"data to be edited stored in a file on disk. Because data can just as easily be\n"
"piped to sed, it's very easy to use sed as part of a long, complex pipeline in a\n"
"powerful shell script. Try doing that with your favorite editor.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:76
#, no-wrap
msgid "GNU sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:80
#, no-wrap
msgid ""
"Fortunately for us Linux users, one of the nicest versions of sed out there\n"
"happens to be GNU sed, which is currently at version 3.02. Every Linux\n"
"distribution has GNU sed, or at least should. GNU sed is popular not only\n"
"because its sources are freely distributable, but because it happens to have a\n"
"lot of handy, time-saving extensions to the POSIX sed standard. GNU sed also\n"
"doesn't suffer from many of the limitations that earlier and proprietary\n"
"versions of sed had, such as a limited line length -- GNU sed handles lines of\n"
"any length with ease.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:93
#, no-wrap
msgid "The newest GNU sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:97
#, no-wrap
msgid ""
"While researching this article, I noticed that several online sed aficionados\n"
"made reference to a GNU sed 3.02a. Strangely, I couldn't find sed 3.02a on\n"
"<uri>ftp://ftp.gnu.org</uri> (see <uri link=\"#resources\">Resources</uri> for\n"
"these links), so I had to go look for it elsewhere. I found it at\n"
"<uri>ftp://alpha.gnu.org</uri>, in <path>/pub/sed</path>. I happily downloaded\n"
"it, compiled it, and installed it, only to find minutes later that the most\n"
"recent version of sed is 3.02.80 -- and you can find its sources right next to\n"
"those for 3.02a, at <uri>ftp://alpha.gnu.org</uri>. After getting GNU sed\n"
"3.02.80 installed, I was finally ready to go.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:111
#, no-wrap
msgid "The right sed"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:115
#, no-wrap
msgid ""
"In this series, we will be using GNU sed 3.02.80. Some (but very few) of the\n"
"most advanced examples you'll find in my upcoming, follow-on articles in this\n"
"series will not work with GNU sed 3.02 or 3.02a. If you're using a non-GNU sed,\n"
"your results may vary. Why not take some time to install GNU sed 3.02.80 now?\n"
"Then, not only will you be ready for the rest of the series, but you'll also be\n"
"able to use arguably the best sed in existence!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:126
#, no-wrap
msgid "Sed examples"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:130
#, no-wrap
msgid ""
"Sed works by performing any number of user-specified editing operations\n"
"(\"commands\") on the input data. Sed is line-based, so the commands are performed\n"
"on each line in order. And, sed writes its results to standard output (stdout);\n"
"it doesn't modify any input files.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:137
#, no-wrap
msgid ""
"Let's look at some examples. The first several are going to be a bit weird\n"
"because I'm using them to illustrate how sed works rather than to perform any\n"
"useful task. However, if you're new to sed, it's very important that you\n"
"understand them. Here's our first example:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:143
#, no-wrap
msgid "Example of sed usage"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:144
#, no-wrap
msgid "$ <i>sed -e 'd' /etc/services</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:148
#, no-wrap
msgid ""
"If you type this command, you'll get absolutely no output. Now, what happened?\n"
"In this example, we called sed with one editing command, <c>d</c>. Sed opened\n"
"the <path>/etc/services</path> file, read a line into its pattern buffer,\n"
"performed our editing command (\"delete line\"), and then printed the pattern\n"
"buffer (which was empty). It then repeated these steps for each successive line.\n"
"This produced no output, because the <c>d</c> command zapped every single line\n"
"in the pattern buffer!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:158
#, no-wrap
msgid ""
"There are a couple of things to notice in this example. First,\n"
"<path>/etc/services</path> was not modified at all. This is because, again, sed\n"
"only reads from the file you specify on the command line, using it as input --\n"
"it doesn't try to modify the file. The second thing to notice is that sed is\n"
"line-oriented. The <c>d</c> command didn't simply tell sed to delete all incoming\n"
"data in one fell swoop. Instead, sed read each line of /etc/services one by one\n"
"into its internal buffer, called the pattern buffer. Once a line was read into\n"
"the pattern buffer, it performed the <c>d</c> command and printed the contents\n"
"of the pattern buffer (nothing in this example). Later, I'll show you how to use\n"
"address ranges to control which lines a command is applied to -- but in the\n"
"absence of addresses, a command is applied to all lines.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:172
#, no-wrap
msgid ""
"The third thing to notice is the use of single quotes to surround the <c>d</c>\n"
"command. It's a good idea to get into the habit of using single quotes to\n"
"surround your sed commands, so that shell expansion is disabled.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:180 en/articles/l-sed1.xml:188
#, no-wrap
msgid "Another sed example"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:184
#, no-wrap
msgid ""
"Here's an example of how to use sed to remove the first line of the\n"
"<path>/etc/services</path> file from our output stream:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:189
#, no-wrap
msgid "$ <i>sed -e '1d' /etc/services | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:193
#, no-wrap
msgid ""
"As you can see, this command is very similar to our first <c>d</c> command,\n"
"except that it is preceded by a <c>1</c>. If you guessed that the <c>1</c>\n"
"refers to line number one, you're right. While in our first example, we used\n"
"<c>d</c> by itself, this time we use the <c>d</c> command preceded by an\n"
"optional numerical address. By using addresses, you can tell sed to perform\n"
"edits only on a particular line or lines.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:204
#, no-wrap
msgid "Address ranges"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:208
#, no-wrap
msgid ""
"Now, let's look at how to specify an address range. In this example, sed will\n"
"delete lines 1-10 of the output:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:212
#, no-wrap
msgid "Specifying an address range"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:213
#, no-wrap
msgid "$ <i>sed -e '1,10d' /etc/services | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:217
#, no-wrap
msgid ""
"When we separate two addresses by a comma, sed will apply the following command\n"
"to the range that starts with the first address, and ends with the second\n"
"address. In this example, the <c>d</c> command was applied to lines 1-10,\n"
"inclusive. All other lines were ignored.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:226
#, no-wrap
msgid "Addresses with regular expressions"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:230
#, no-wrap
msgid ""
"Now, it's time for a more useful example. Let's say you wanted to view the\n"
"contents of your <path>/etc/services</path> file, but you aren't interested in\n"
"viewing any of the included comments. As you know, you can place comments in\n"
"your <path>/etc/services</path> file by starting the line with the '#'\n"
"character. To avoid comments, we'd like sed to delete lines that start with a\n"
"'#'. Here's how to do it:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:238
#, no-wrap
msgid "Deleting lines starting with #"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:239
#, no-wrap
msgid "$ <i>sed -e '/^#/d' /etc/services | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:243
#, no-wrap
msgid ""
"Try this example and see what happens. You'll notice that sed performs its\n"
"desired task with flying colors. Now, let's figure out what happened.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:248
#, no-wrap
msgid ""
"To understand the '/^#/d' command, we first need to dissect it. First, let's\n"
"remove the 'd' -- we're using the same delete line command that we've used\n"
"previously. The new addition is the '/^#/' part, which is a new kind of regular\n"
"expression address. Regular expression addresses are always surrounded by\n"
"slashes. They specify a pattern, and the command that immediately follows a\n"
"regular expression address will only be applied to a line if it happens to match\n"
"this particular pattern.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:258
#, no-wrap
msgid ""
"So, '/^#/' is a regular expression. But what does it do? Obviously, this would\n"
"be a good time for a regular expression refresher.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:265
#, no-wrap
msgid "Regular expression refresher"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:269
#, no-wrap
msgid ""
"We can use regular expressions to express patterns that we may find in the text.\n"
"If you've ever used the '*' character on the shell command line, you've used\n"
"something that's similar, but not identical to, regular expressions. Here are\n"
"the special characters that you can use in regular expressions:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><th>
#: en/articles/l-sed1.xml:277
#, no-wrap
msgid "Character"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><th>
#: en/articles/l-sed1.xml:278 en/articles/l-sed1.xml:311
#, no-wrap
msgid "Description"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:281
#, no-wrap
msgid "^"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:282
#, no-wrap
msgid "Matches the beginning of the line"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:285
#, no-wrap
msgid "$"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:286
#, no-wrap
msgid "Matches the end of the line"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:289
#, no-wrap
msgid "."
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:290
#, no-wrap
msgid "Matches any single character"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:293
#, no-wrap
msgid "*"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:294
#, no-wrap
msgid "Will match zero or more occurrences of the previous character"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:297
#, no-wrap
msgid "[ ]"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:298
#, no-wrap
msgid "Matches all the characters inside the [ ]"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:303
#, no-wrap
msgid ""
"Probably the best way to get your feet wet with regular expressions is to see a\n"
"few examples. All of these examples will be accepted by sed as valid addresses\n"
"to appear on the left side of a command. Here are a few:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><th>
#: en/articles/l-sed1.xml:310
#, no-wrap
msgid "Regular expression"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:314
#, no-wrap
msgid "/./"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:315
#, no-wrap
msgid "Will match any line that contains at least one character"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:318
#, no-wrap
msgid "/../"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:319
#, no-wrap
msgid "Will match any line that contains at least two characters"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:322
#, no-wrap
msgid "/^#/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:323
#, no-wrap
msgid "Will match any line that begins with a '#'"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:326
#, no-wrap
msgid "/^$/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:327
#, no-wrap
msgid "Will match all blank lines"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:330
#, no-wrap
msgid "/}$/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:331
#, no-wrap
msgid "Will match any lines that ends with '}' (no spaces)"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:334
#, no-wrap
msgid "/} *$/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:335
#, no-wrap
msgid "Will match any line ending with '}' followed by zero or more spaces"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:338
#, no-wrap
msgid "/[abc]/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:339
#, no-wrap
msgid "Will match any line that contains a lowercase 'a', 'b', or 'c'"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:342
#, no-wrap
msgid "/^[abc]/"
msgstr ""

#. type: Content of: <guide><chapter><section><body><table><tr><ti>
#: en/articles/l-sed1.xml:343
#, no-wrap
msgid "Will match any line that begins with an 'a', 'b', or 'c'"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:348
#, no-wrap
msgid ""
"I encourage you to try several of these examples. Take some time to get familiar\n"
"with regular expressions, and try a few regular expressions of your own\n"
"creation. You can use a regexp this way:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:353
#, no-wrap
msgid "Proper way of using regexp"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:354
#, no-wrap
msgid "$ <i>sed -e '/regexp/d' /path/to/my/test/file | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:358
#, no-wrap
msgid ""
"This will cause sed to delete any matching lines. However, it may be easier to\n"
"get familiar with regular expressions by telling sed to print regexp matches,\n"
"and delete non-matches, rather than the other way around. This can be done with\n"
"the following command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:364
#, no-wrap
msgid "Printing regexp matches"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:365
#, no-wrap
msgid "$ <i>sed -n -e '/regexp/p' /path/to/my/test/file | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:369
#, no-wrap
msgid ""
"Note the new '-n' option, which tells sed to not print the pattern space unless\n"
"explicitly commanded to do so. You'll also notice that we've replaced the\n"
"<c>d</c> command with the <c>p</c> command, which as you might guess, explicitly\n"
"commands sed to print the pattern space. Voila, now only matches will be\n"
"printed.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:379
#, no-wrap
msgid "More on addresses"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:383
#, no-wrap
msgid ""
"Up till now, we've taken a look at line addresses, line range addresses, and\n"
"regexp addresses. But there are even more possibilities. We can specify two\n"
"regular expressions separated by a comma, and sed will match all lines starting\n"
"from the first line that matches the first regular expression, up to and\n"
"including the line that matches the second regular expression. For example, the\n"
"following command will print out a block of text that begins with a line\n"
"containing \"BEGIN\", and ending with a line that contains \"END\":\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:392
#, no-wrap
msgid "Printing out a desired block of text"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:393
#, no-wrap
msgid "$ <i>sed -n -e '/BEGIN/,/END/p' /my/test/file | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:397
#, no-wrap
msgid ""
"If \"BEGIN\" isn't found, no data will be printed. And, if \"BEGIN\" is found, but\n"
"no \"END\" is found on any line below it, all subsequent lines will be printed.\n"
"This happens because of sed's stream-oriented nature -- it doesn't know whether\n"
"or not an \"END\" will appear.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:406
#, no-wrap
msgid "C source example"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:410
#, no-wrap
msgid ""
"If you want to print out only the main() function in a C source file, you could\n"
"type:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:414
#, no-wrap
msgid "Printing main() function in a C source file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-sed1.xml:415
#, no-wrap
msgid "$ <i>sed -n -e '/main[[:space:]]*(/,/^}/p' sourcefile.c | more</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:419
#, no-wrap
msgid ""
"This command has two regular expressions, '/main[[:space:]]*(/' and '/^}/', and\n"
"one command, <c>p</c>. The first regular expression will match the string \"main\"\n"
"followed by any number of spaces or tabs, followed by an open parenthesis. This\n"
"should match the start of your average ANSI C main() declaration.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:426
#, no-wrap
msgid ""
"In this particular regular expression, we encounter the '[[:space:]]' character\n"
"class. This is simply a special keyword that tells sed to match either a TAB or\n"
"a space. If you wanted, instead of typing '[[:space:]]', you could have typed\n"
"'[', then a literal space, then Control-V, then a literal tab and a ']' -- The\n"
"Control-V tells bash that you want to insert a \"real\" tab rather than perform\n"
"command expansion. It's clearer, especially in scripts, to use the '[[:space:]]'\n"
"command class.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:436
#, no-wrap
msgid ""
"OK, now on to the second regexp. '/^}/' will match a '}' character that appears\n"
"at the beginning of a new line. If your code is formatted nicely, this will\n"
"match the closing brace of your main() function. If it's not, it won't -- one of\n"
"the tricky things about performing pattern matching.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:443
#, no-wrap
msgid ""
"The <c>p</c> command does what it always does, explicitly telling sed to print\n"
"out the line, since we are in '-n' quiet mode. Try running the command on a C\n"
"source file -- it should output the entire main() { } block, including the\n"
"initial \"main()\" and the closing '}'.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:452
#, no-wrap
msgid "Next time"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-sed1.xml:456
#, no-wrap
msgid ""
"Now that we've touched on the basics, we'll be picking up the pace for the next\n"
"two articles. If you're in the mood for some meatier sed material, be patient --\n"
"it's coming! In the meantime, you might want to check out the following sed and\n"
"regular expression resources.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/l-sed1.xml:467
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-sed1.xml:469
#, no-wrap
msgid "Useful links"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:474
#, no-wrap
msgid ""
"    Read Daniel's other sed articles on developerWorks: Common threads: Sed by\n"
"    example, <uri link=\"l-sed2.xml\">Part 2</uri> and <uri\n"
"    link=\"l-sed3.xml\">Part 3</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:479
#, no-wrap
msgid ""
"    Check out Eric Pement's excellent <uri\n"
"    link=\"http://sed.sourceforge.net/sedfaq.html\">sed FAQ</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:483
#, no-wrap
msgid ""
"    You can find the sources to sed at\n"
"    <uri>ftp://ftp.gnu.org/pub/gnu/sed</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:487
#, no-wrap
msgid ""
"    Eric Pement also has a handy list of <uri\n"
"    link=\"http://sed.sourceforge.net/sed1line.txt\">sed one-liners</uri>\n"
"    that any aspiring sed guru should definitely look at.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:492
#, no-wrap
msgid ""
"    If you'd like a good old-fashioned book, <uri\n"
"    link=\"http://www.oreilly.com/catalog/sed2/\">O'Reilly's sed &amp; awk, 2nd\n"
"    Edition</uri> would be wonderful choice.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:509
#, no-wrap
msgid ""
"    Read David Mertz's article on <uri\n"
"    link=\"http://www-106.ibm.com/developerworks/linux/library/l-python5.html\">Text\n"
"    processing in Python</uri> on developerWorks.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:521
#, no-wrap
msgid ""
"    See the regular expressions <uri\n"
"    link=\"http://docs.python.org/dev/howto/regex.html\">how-to\n"
"    document</uri> from <uri link=\"http://python.org\">python.org</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-sed1.xml:526
#, no-wrap
msgid ""
"    Refer to an <uri\n"
"    link=\"http://as-houston.as.uky.edu/archive/Classics/regex.html\">overview of\n"
"    regular expressions</uri> from the University of Kentucky.\n"
"  "
msgstr ""
