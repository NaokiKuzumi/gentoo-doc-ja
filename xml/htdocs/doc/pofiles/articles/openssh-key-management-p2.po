# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/openssh-key-management-p2.xml:6
#, no-wrap
msgid "OpenSSH key management, Part 2"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/openssh-key-management-p2.xml:13
#, no-wrap
msgid ""
"Many developers use the excellent OpenSSH as a secure, encrypted replacement\n"
"for the venerable telnet and rsh commands. One of OpenSSH's more intriguing\n"
"features is its ability to authenticate users using the RSA and DSA\n"
"authentication protocols, which are based upon a pair of complementary\n"
"numerical \"keys\". One of the main appeals of RSA and DSA authentication is the\n"
"promise of being able to establish connections to remote systems without\n"
"supplying a password. In this second article, Daniel introduces ssh-agent (a\n"
"private key cache) and keychain, a special bash script designed to make\n"
"key-based authentication incredibly convenient and flexible.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/openssh-key-management-p2.xml:33
#, no-wrap
msgid "Introducing ssh-agent and keychain"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:35
#, no-wrap
msgid "Introducing ssh-agent"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:39
#, no-wrap
msgid ""
"ssh-agent, included with the OpenSSH distribution, is a special program\n"
"designed to make dealing with RSA and DSA keys both pleasant and secure (see\n"
"Part 1 of this series for an introduction to RSA and DSA authentication.)\n"
"ssh-agent, unlike ssh, is a long-running daemon designed for the sole purpose\n"
"of caching your decrypted private keys.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:47
#, no-wrap
msgid ""
"ssh includes built-in support that allows it to communicate with ssh-agent,\n"
"allowing ssh to acquire your decrypted private keys without prompting you for a\n"
"password for every single new connection. With ssh-agent you simply use ssh-add\n"
"to add your private keys to ssh-agent's cache. It's a one-time process; after\n"
"using ssh-add, ssh will grab your private key from ssh-agent, rather than\n"
"bugging you by prompting for a passphrase.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:58
#, no-wrap
msgid "Using ssh-agent"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:62
#, no-wrap
msgid ""
"Let's take a look at how this whole ssh-agent key caching system works. When\n"
"ssh-agent starts up, it spits out a few important environment variables before\n"
"detaching from the shell and continuing to run in the background. Here's some\n"
"example output generated by ssh-agent when it begins:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:68
#, no-wrap
msgid "Running ssh-agent daemon"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:69
#, no-wrap
msgid ""
"$ <i>ssh-agent</i>\n"
"SSH_AUTH_SOCK=/tmp/ssh-XX4LkMJS/agent.26916; export SSH_AUTH_SOCK;\n"
"SSH_AGENT_PID=26917; export SSH_AGENT_PID;\n"
"echo Agent pid 26917;\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:76
#, no-wrap
msgid ""
"As you can see, ssh-agent's output is actually a series of bash commands; if\n"
"executed, these commands would set a couple of environment variables,\n"
"SSH_AUTH_SOCK and SSH_AGENT_PID. Due to the included export commands, these\n"
"environment variables would be made available to any additional commands run\n"
"later. Well, all that would happen if these lines were actually evaluated by\n"
"the shell, but right now they're simply printed to stdout. To fix this, we can\n"
"invoke ssh-agent in the following way:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:85
#, no-wrap
msgid "Different way of invoking ssh-agent"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:86
#, no-wrap
msgid "$ <i>eval `ssh-agent`</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:90
#, no-wrap
msgid ""
"This command tells bash to run ssh-agent and then evaluate ssh-agent's output.\n"
"Invoked this way (with back-quotes, not normal single quotes), the\n"
"SSH_AGENT_PID and SSH_AUTH_SOCK variables get set and exported by your shell,\n"
"making these variables available to any new processes you may start during your\n"
"login session.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:98
#, no-wrap
msgid ""
"The best way to start ssh-agent is to add the above line to your\n"
"<path>~/.bash_profile</path>; that way, all programs started in your login\n"
"shell will see the environment variables, be able to locate ssh-agent and query\n"
"it for keys as needed. The environment variable of particular importance is\n"
"SSH_AUTH_SOCK; the SSH_AUTH_SOCK contains a path to a UNIX domain socket that\n"
"ssh and scp can use to establish a dialogue with ssh-agent.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:109
#, no-wrap
msgid "Using ssh-add"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:113
#, no-wrap
msgid ""
"But of course, ssh-agent starts up with an empty cache of decrypted private\n"
"keys. Before we can really use ssh-agent, we first need to add add our private\n"
"key(s) to ssh-agent's cache using the ssh-add command. In the following\n"
"example, I use ssh-add to add my <path>~/.ssh/identity</path> private RSA key\n"
"to ssh-agent's cache:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:120
#, no-wrap
msgid "Loading private RSA key to ssh-agent's cache"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:121
#, no-wrap
msgid ""
"$ <i>ssh-add ~/.ssh/identity</i>\n"
"Need passphrase for /home/drobbins/.ssh/identity\n"
"Enter passphrase for /home/drobbins/.ssh/identity \n"
"(enter passphrase)\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:128
#, no-wrap
msgid ""
"As you can see, ssh-add asked for my passphrase so that the private key can be\n"
"decrypted and stored in ssh-agent's cache, ready for use. Once you've used\n"
"ssh-add to add your private key (or keys) to ssh-agent's cache and\n"
"SSH_AUTH_SOCK is defined in your current shell (which it should be, if you\n"
"started ssh-agent from your ~/.bash_profile), then you can use scp and ssh to\n"
"establish connections with remote systems without supplying your passphrase.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:139
#, no-wrap
msgid "Limitations of ssh-agent"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:143
#, no-wrap
msgid ""
"ssh-agent is really cool, but its default configuration still leaves us with a\n"
"few minor inconveniences. Let's take a look at them.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:148
#, no-wrap
msgid ""
"For one, with <c>eval `ssh-agent`</c> in <path>~/.bash_profile</path>, a new\n"
"copy of ssh-agent is launched for every login session; not only is this a tad\n"
"bit wasteful, but it also means that you need to use ssh-add to add a private\n"
"key to each new copy of ssh-agent. If you only open a single terminal or\n"
"console on your system, this is no big deal, but most of us open quite a few\n"
"terminals and need to type in our passphrase every single time we open a new\n"
"console. Technically, there's no reason why we should need to do this since a\n"
"single ssh-agent process really should suffice.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:159
#, no-wrap
msgid ""
"Another problem with the default ssh-agent setup is that it's not compatible\n"
"with cron jobs. Since cron jobs are started by the cron process, they won't\n"
"inherit the SSH_AUTH_SOCK variable from their environment, and thus won't know\n"
"that a ssh-agent process is running or how to contact it. It turns out that\n"
"this problem is also fixable.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:169
#, no-wrap
msgid "Enter keychain"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:173
#, no-wrap
msgid ""
"To solve these problems, I wrote a handy bash-based ssh-agent front-end called\n"
"keychain. What makes keychain special is the fact that it allows you to use a\n"
"single ssh-agent process per system, not just per login session. This means\n"
"that you only need to do one ssh-add per private key, period. As we'll see in a\n"
"bit, keychain even helps to optimize the ssh-add process by only trying to add\n"
"private keys that aren't already in the running ssh-agent's cache.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:182
#, no-wrap
msgid ""
"Here's a run-through of how keychain works. When started from your\n"
"<path>~/.bash_profile</path>, it will first check to see whether an ssh-agent is\n"
"already running. If not, then it will start ssh-agent and record the important\n"
"SSH_AUTH_SOCK and SSH_AGENT_PID variables in the\n"
"<path>~/.keychain/&lt;hostname&gt;-sh</path> file for safe keeping and later\n"
"use. Here's the best way to start keychain; like using plain old ssh-agent, we\n"
"perform the necessary setup inside <path>~/.bash_profile</path>:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:191
#, no-wrap
msgid "Settings for ssh-agent in ~/.bash_profile"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:192
#, no-wrap
msgid ""
"#!/bin/bash\n"
"\n"
"<comment># example ~/.bash_profile file</comment>\n"
"/usr/bin/keychain ~/.ssh/id_rsa\n"
"\n"
"<comment># redirect ~/.keychain/ output to /dev/null to zap the annoying\n"
"# \"Agent PID\" message</comment>\n"
"source ~/.keychain/&lt;hostname&gt;-sh > /dev/null\n"
"\n"
"<comment># the environment variables are stored using a hostname-shell file,\n"
"# so replace &lt;hostname&gt; with your hostname, and the standard \"sh\" with\n"
"# \"csh\" or \"fish\" if you use either of those shells</comment>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:207
#, no-wrap
msgid ""
"As you can see, with keychain we source the\n"
"<path>~/.keychain/&lt;hostname&gt;-sh</path> file rather than evaluating output\n"
"as we did when using ssh-agent directly. However, the result is the same -- our\n"
"ever-important SSH_AUTH_SOCK is defined, and ssh-agent is running and ready\n"
"for use. And because SSH_AUTH_SOCK is recorded in <path>~/.keychain/</path>, our\n"
"own shell scripts and cron jobs can easily connect with ssh-agent just by\n"
"sourcing the <path>~/.keychain/&lt;hostname&gt;-sh</path> file.  keychain itself\n"
"also takes advantage of this file; you'll remember that when keychain starts up,\n"
"it checks to see whether an existing ssh-agent is running.  If so, it uses the\n"
"appropriate file in <path>~/.keychain/</path> to acquire the proper\n"
"SSH_AUTH_SOCK setting, thus allowing it to use the existing agent rather than\n"
"starting a new one.  keychain will start a new ssh-agent process only if the\n"
"<path>~/.keychain/</path> file is stale (points to a non-existent ssh-agent) or\n"
"if <path>~/.keychain/</path> itself does not exist.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:226
#: en/articles/openssh-key-management-p2.xml:233
#, no-wrap
msgid "Installing keychain"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:230
#, no-wrap
msgid "Installing keychain is easy:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:234
#, no-wrap
msgid "# <i>emerge keychain</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:238
#, no-wrap
msgid ""
"Now that keychain is in <path>/usr/bin/</path>, add it to your\n"
"<path>~/.bash_profile</path>, supplying paths to your private keys as\n"
"arguments. Here's a good standard keychain-enabled\n"
"<path>~/.bash_profile</path>:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:244
#, no-wrap
msgid "Enabling keychain in ~/.bash_profile"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:245
#, no-wrap
msgid ""
"#!/bin/bash\n"
"\n"
"<comment># on this next line, we start keychain and point it to the private keys that\n"
"# we'd like it to cache</comment>\n"
"/usr/bin/keychain ~/.ssh/id_rsa ~/.ssh/id_dsa\n"
"\n"
"<comment># the environment variables are stored using a hostname-shell file,\n"
"# so replace &lt;hostname&gt; with your hostname, and the standard \"sh\" with\n"
"# \"csh\" or \"fish\" if you use either of those shells</comment>\n"
"source ~/.keychain/&lt;hostname&gt;-sh > /dev/null\n"
"\n"
"<comment># sourcing ~/.bashrc is a good thing</comment>\n"
"source ~/.bashrc\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:263
#, no-wrap
msgid "Keychain in action"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:267
#, no-wrap
msgid ""
"Once you've configured your <path>~/.bash_profile</path> to call keychain at\n"
"every login, log out and log back in. When you do, keychain will start\n"
"ssh-agent, record the agent's environment variable settings in\n"
"<path>~/.keychain/</path>, and then prompt you for passphrases for any private\n"
"keys specified on the keychain command-line in <path>~/.bash_profile</path>:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><figure>
#: en/articles/openssh-key-management-p2.xml:274
#, no-wrap
msgid "Keychain starts for the first time"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:277
#, no-wrap
msgid ""
"Once you enter your passphrases, you private keys will be cached, and keychain\n"
"will exit. Then, <path>~/.keychain/&lt;hostname&gt;-sh</path> will be sourced,\n"
"initializing your login session for use with ssh-agent. Now, if you log out and\n"
"log back in again, you'll find that keychain will find the existing ssh-agent\n"
"process; it didn't terminate when you logged out. In addition, keychain will\n"
"verify that the private key(s) you specified are already in ssh-agent's cache.\n"
"If not, then you'll be prompted for the appropriate passphrases, but if all goes\n"
"well, your existing ssh-agent will still contain the private key that you\n"
"previously added; this means that you're not prompted for a password:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><figure>
#: en/articles/openssh-key-management-p2.xml:288
#, no-wrap
msgid "Keychain finds an existing ssh-agent"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:291
#, no-wrap
msgid ""
"Congratulations; you've just logged in and should be able to ssh and scp to\n"
"remote systems; you didn't need to use ssh-add right after login, and ssh and\n"
"scp won't prompt you for a passphrase either. In fact, as long as your initial\n"
"ssh-agent process keeps running, you'll be able to log in and establish ssh\n"
"connections without supplying a password. And it's very likely that your\n"
"ssh-agent process will continue to run until the machine is rebooted; since\n"
"you're most likely setting this up on a Linux system, it's possible that you\n"
"may not need to enter your passphrase for several months! Welcome to the world\n"
"of secure, passwordless connections using RSA and DSA authentication.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:303
#, no-wrap
msgid ""
"Go ahead and create several new login sessions, and you'll see that keychain\n"
"will \"hook in\" to the exact same ssh-agent process each time. Don't forget that\n"
"you can also get your cron jobs and scripts to \"hook in\" to the running\n"
"ssh-agent process. To use ssh or scp commands from your shell scripts and cron\n"
"jobs, just make sure that they source your\n"
"<path>~/.keychain/&lt;hostname&gt;-shell</path> file first:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:311
#, no-wrap
msgid "Sourcing the appropriate ~/.keychain/ file"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/openssh-key-management-p2.xml:312
#, no-wrap
msgid ""
"<comment>(The environment variables are stored using a hostname-shell file, so replace\n"
"&lt;hostname&gt; with your hostname, and the standard \"sh\" with \"csh\" or \"fish\"\n"
"if you use either of those shells)</comment>\n"
"$ <i>source ~/.keychain/&lt;hostname&gt;-sh</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:319
#, no-wrap
msgid ""
"Then, any following ssh or scp commands will be able to find the\n"
"currently-running ssh-agent and establish secure passwordless connections just\n"
"like you can from the shell.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:327
#, no-wrap
msgid "Keychain options"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:331
#, no-wrap
msgid ""
"After you have keychain up and running, be sure to type <c>keychain --help</c>\n"
"to familiarize yourself with all of keychain's command-line options. We're\n"
"going to take a look at one in particular: the <c>--clear</c> option.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:337
#, no-wrap
msgid ""
"You'll recall that in Part 1, I explained that using unencrypted private keys\n"
"is a dangerous practice, because it allows someone to steal your private key\n"
"and use it to log in to your remote accounts from any other system without\n"
"supplying a password. Well, while keychain isn't vulnerable to this kind of\n"
"abuse (as long as you use encrypted private keys, that is), there is a\n"
"potentially exploitable weakness directly related to the fact that keychain\n"
"makes it so easy to \"hook in\" to a long-running ssh-agent process. What would\n"
"happen, I thought, if some intruder were somehow able to figure out my password\n"
"or passphrase and log into my local system? If they were somehow able to log in\n"
"under my username, keychain would grant them instant access to my decrypted\n"
"private keys, making it a no-brainer for them to access my other accounts.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:351
#, no-wrap
msgid ""
"Now, before I continue, let's put this security threat in perspective. If some\n"
"malicious user were somehow able to log in as me, keychain would indeed allow\n"
"them to access my remote accounts. Yet, even so, it would be very difficult for\n"
"the intruder to steal my decrypted private keys since they are still encrypted\n"
"on disk. Also, gaining access to my private keys would require a user to\n"
"actually log in as me, not just read files in my directory. So, abusing\n"
"ssh-agent would be a much more difficult task than simply stealing an\n"
"unencrypted private key, which only requires that an intruder somehow gain\n"
"access to my files in <path>~/.ssh</path>, whether logged in as me or not.\n"
"Nevertheless, if an intruder were successfully able to log in as me, they could\n"
"do quite a bit of additional damage by using my decrypted private keys. So, if\n"
"you happen to be using keychain on a server that you don't log into very often\n"
"or don't actively monitor for security breaches, then consider using the\n"
"<c>--clear</c> option to provide an additional layer of security.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:368
#, no-wrap
msgid ""
"The <c>--clear</c> option allows you to tell keychain to assume that every new\n"
"login to your account should be considered a potential security breach until\n"
"proven otherwise. When you start keychain with the <c>--clear</c> option,\n"
"keychain immediately flushes all your private keys from ssh-agent's cache when\n"
"you log in, before performing its normal duties. Thus, if you're an intruder,\n"
"keychain will prompt you for passphrases rather than giving you access to your\n"
"existing set of cached keys. However, even though this enhances security, it\n"
"does make things a bit more inconvenient and very similar to running ssh-agent\n"
"all by itself, without keychain. Here, as is often the case, one can opt for\n"
"greater security or greater convenience, but not both.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:381
#, no-wrap
msgid ""
"Despite this, using keychain with <c>--clear</c> still has advantages over\n"
"using ssh-agent all by itself; remember, when you use keychain <c>--clear</c>,\n"
"your cron jobs and scripts will still be able to establish passwordless\n"
"connections; this is because your private keys are flushed at login, not\n"
"logout. Since a logout from the system does not constitute a potential security\n"
"breach, there's no reason for keychain to respond by flushing ssh-agent's keys.\n"
"Thus, the <c>--clear</c> option an ideal choice for infrequently accessed\n"
"servers that need to perform occasional secure copying tasks, such as backup\n"
"servers, firewalls, and routers.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/openssh-key-management-p2.xml:395
#, no-wrap
msgid "We're done!"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/openssh-key-management-p2.xml:399
#, no-wrap
msgid ""
"Now that the OpenSSH key management series is complete, you should be very\n"
"familiar with RSA and DSA keys and know how to use them in a convenient yet\n"
"secure way. Be sure to also check out the following resources:\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/openssh-key-management-p2.xml:409
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p2.xml:415
#, no-wrap
msgid ""
"    Read <uri link=\"/doc/en/articles/openssh-key-management-p1.xml\">Part\n"
"    1</uri> and <uri link=\"/doc/en/articles/openssh-key-management-p3.xml\">Part\n"
"    3</uri> of Daniel's series on OpenSSH key management.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p2.xml:420
#, no-wrap
msgid ""
"    Visit the <uri link=\"http://www.openssh.com/\">home of OpenSSH\n"
"    development</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p2.xml:424
#, no-wrap
msgid ""
"    Check out the <uri link=\"http://www.openssh.com/faq.html\">OpenSSH FAQ</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p2.xml:427
#, no-wrap
msgid ""
"    <uri link=\"http://www.chiark.greenend.org.uk/~sgtatham/putty/\">PuTTY is an\n"
"    excellent ssh client for Windows machine</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/openssh-key-management-p2.xml:431
#, no-wrap
msgid ""
"    You may find O'Reilly's \"SSH, The Secure Shell: The Definitive Guide\" book\n"
"    helpful. <uri link=\"http://www.snailbook.com/\">The Authors' site</uri>\n"
"    contains information about the book, a FAQ, news, and updates.\n"
"  "
msgstr ""
