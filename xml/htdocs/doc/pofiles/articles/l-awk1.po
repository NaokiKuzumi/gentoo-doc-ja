# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/l-awk1.xml:6
#, no-wrap
msgid "Awk by example, Part 1"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/l-awk1.xml:13
#, no-wrap
msgid ""
"Awk is a very nice language with a very strange name. In this first article of a\n"
"three-part series, Daniel Robbins will quickly get your awk programming skills\n"
"up to speed. As the series progresses, more advanced topics will be covered,\n"
"culminating with an advanced real-world awk application demo.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/l-awk1.xml:28
#, no-wrap
msgid "An intro to the great language with the strange name"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:30
#, no-wrap
msgid "In defense of awk"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:34
#, no-wrap
msgid ""
"In this series of articles, I'm going to turn you into a proficient awk coder.\n"
"I'll admit, awk doesn't have a very pretty or particularly \"hip\" name, and the\n"
"GNU version of awk, called gawk, sounds downright weird. Those unfamiliar with\n"
"the language may hear \"awk\" and think of a mess of code so backwards and\n"
"antiquated that it's capable of driving even the most knowledgeable UNIX guru to\n"
"the brink of insanity (causing him to repeatedly yelp \"kill -9!\" as he runs for\n"
"coffee machine).\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:44
#, no-wrap
msgid ""
"Sure, awk doesn't have a great name. But it is a great language. Awk is geared\n"
"toward text processing and report generation, yet features many well-designed\n"
"features that allow for serious programming. And, unlike some languages, awk's\n"
"syntax is familiar, and borrows some of the best parts of languages like C,\n"
"python, and bash (although, technically, awk was created before both python and\n"
"bash). Awk is one of those languages that, once learned, will become a key part\n"
"of your strategic coding arsenal.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:56 en/articles/l-awk1.xml:59
#, no-wrap
msgid "The first awk"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:60
#, no-wrap
msgid "$ <i>awk '{ print }' /etc/passwd</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:64
#, no-wrap
msgid ""
"You should see the contents of your <path>/etc/passwd</path> file appear before\n"
"your eyes.  Now, for an explanation of what awk did. When we called awk, we\n"
"specified <path>/etc/passwd</path> as our input file. When we executed awk, it\n"
"evaluated the print command for each line in <path>/etc/passwd</path>, in order.\n"
"All output is sent to stdout, and we get a result identical to <c>cat</c>ting\n"
"<path>/etc/passwd</path>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:73
#, no-wrap
msgid ""
"Now, for an explanation of the { print } code block. In awk, curly braces are\n"
"used to group blocks of code together, similar to C. Inside our block of code,\n"
"we have a single print command. In awk, when a print command appears by itself,\n"
"the full contents of the current line are printed.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:79
#, no-wrap
msgid "Printing the current line"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:80
#, no-wrap
msgid ""
"$ <i>awk '{ print $0 }' /etc/passwd</i>\n"
"$ <i>awk '{ print \"\" }' /etc/passwd</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:85
#, no-wrap
msgid ""
"In awk, the $0 variable represents the entire current line, so print and print\n"
"$0 do exactly the same thing.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:89
#, no-wrap
msgid "Filling the screen with some text"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:90
#, no-wrap
msgid "$ <i>awk '{ print \"hiya\" }' /etc/passwd</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:96
#, no-wrap
msgid "Multiple fields"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:99
#, no-wrap
msgid "print $1"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:100
#, no-wrap
msgid ""
"$ <i>awk -F\":\" '{ print $1 $3 }' /etc/passwd</i>\n"
"halt7\n"
"operator11\n"
"root0\n"
"shutdown6\n"
"sync5\n"
"bin1\n"
"<comment>....etc.</comment>\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:110
#, no-wrap
msgid "print $1 $3"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:111
#, no-wrap
msgid "$ <i>awk -F\":\" '{ print $1 \" \" $3 }' /etc/passwd</i>\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:114
#, no-wrap
msgid "$1$3"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:115
#, no-wrap
msgid ""
"$ <i>awk -F\":\" '{ print \"username: \" $1 \"\\t\\tuid:\" $3 }' /etc/passwd</i>\n"
"username: halt          uid:7\n"
"username: operator      uid:11\n"
"username: root          uid:0\n"
"username: shutdown      uid:6\n"
"username: sync          uid:5\n"
"username: bin           uid:1\n"
"<comment>....etc.</comment>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:128
#, no-wrap
msgid "External scripts"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:131
#, no-wrap
msgid "Sample script"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:132
#, no-wrap
msgid ""
"BEGIN { FS=\":\" }\n"
"{ print $1 }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:137
#, no-wrap
msgid ""
"The difference between these two methods has to do with how we set the field\n"
"separator. In this script, the field separator is specified within the code\n"
"itself (by setting the FS variable), while our previous example set FS by\n"
"passing the -F\":\" option to awk on the command line. It's generally best to set\n"
"the field separator inside the script itself, simply because it means you have\n"
"one less command line argument to remember to type. We'll cover the FS variable\n"
"in more detail later in this article.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:149
#, no-wrap
msgid "The BEGIN and END blocks"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:153
#, no-wrap
msgid ""
"Normally, awk executes each block of your script's code once for each input\n"
"line. However, there are many programming situations where you may need to\n"
"execute initialization code before awk begins processing the text from the input\n"
"file. For such situations, awk allows you to define a BEGIN block. We used a\n"
"BEGIN block in the previous example. Because the BEGIN block is evaluated before\n"
"awk starts processing the input file, it's an excellent place to initialize the\n"
"FS (field separator) variable, print a heading, or initialize other global\n"
"variables that you'll reference later in the program.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:164
#, no-wrap
msgid ""
"Awk also provides another special block, called the END block. Awk executes this\n"
"block after all lines in the input file have been processed. Typically, the END\n"
"block is used to perform final calculations or print summaries that should\n"
"appear at the end of the output stream.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:173 en/articles/l-awk1.xml:176
#, no-wrap
msgid "Regular expressions and blocks"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:177
#, no-wrap
msgid ""
"/foo/ { print }\n"
"/[0-9]+\\.[0-9]*/ { print }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:184
#, no-wrap
msgid "Expressions and blocks"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:187
#, no-wrap
msgid "fredprint"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:188
#, no-wrap
msgid "$1 == \"fred\" { print $3 }\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:191
#, no-wrap
msgid "root"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:192
#, no-wrap
msgid "$5 ~ /root/ { print $3 }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:198
#, no-wrap
msgid "Conditional statements"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:201 en/articles/l-awk1.xml:233
#: en/articles/l-awk1.xml:237
#, no-wrap
msgid "if"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:202
#, no-wrap
msgid ""
"{ \n"
"    if ( $5 ~ /root/ ) { \n"
"        print $3 \n"
"    }\n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:210
#, no-wrap
msgid ""
"Both scripts function identically. In the first example, the boolean expression\n"
"is placed outside the block, while in the second example, the block is executed\n"
"for every input line, and we selectively perform the print command by using an\n"
"if statement. Both methods are available, and you can choose the one that best\n"
"meshes with the other parts of your script.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:217
#, no-wrap
msgid "if if"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:218
#, no-wrap
msgid ""
"{\n"
"    if ( $1 == \"foo\" ) {\n"
"        if ( $2 == \"foo\" ) {\n"
"            print \"uno\"\n"
"        } else {\n"
"            print \"one\"\n"
"        }\n"
"    } else if ($1 == \"bar\" ) {\n"
"        print \"two\"\n"
"    } else {\n"
"        print \"three\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:234
#, no-wrap
msgid "! /matchme/ { print $1 $3 $4 }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:238
#, no-wrap
msgid ""
"{\n"
"    if ( $0 !~ /matchme/ ) {\n"
"        print $1 $3 $4\n"
"    }\n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:246
#, no-wrap
msgid ""
"Both scripts will output only those lines that don't contain a matchme\n"
"character sequence. Again, you can choose the method that works best for your\n"
"code. They both do the same thing.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:251
#, no-wrap
msgid "Printing the fields equal to foo and bar"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:252
#, no-wrap
msgid "( $1 == \"foo\" ) &amp;&amp; ( $2 == \"bar\" ) { print } \n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:256
#, no-wrap
msgid ""
"This example will print only those lines where field one equals foo and field\n"
"two equals bar.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:263
#, no-wrap
msgid "Numeric variables!"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:267
#, no-wrap
msgid ""
"In the BEGIN block, we initialize our integer variable x to zero. Then, each\n"
"time awk encounters a blank line, awk will execute the x=x+1 statement,\n"
"incrementing x. After all the lines have been processed, the END block will\n"
"execute, and awk will print out a final summary, specifying the number of blank\n"
"lines it found.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:277
#, no-wrap
msgid "Stringy variables"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:280
#, no-wrap
msgid "Sample field"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:281
#, no-wrap
msgid "2.01\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:284
#, no-wrap
msgid "1.01x$( )1.01"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:285
#, no-wrap
msgid "{ print ($1^2)+1 }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:289
#, no-wrap
msgid ""
"If you do a little experimenting, you'll find that if a particular variable\n"
"doesn't contain a valid number, awk will treat that variable as a numerical zero\n"
"when it evaluates your mathematical expression.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:297
#, no-wrap
msgid "Lots of operators"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:301
#, no-wrap
msgid ""
"Another nice thing about awk is its full complement of mathematical operators.\n"
"In addition to standard addition, subtraction, multiplication, and division, awk\n"
"allows us to use the previously demonstrated exponent operator \"^\", the modulo\n"
"(remainder) operator \"%\", and a bunch of other handy assignment operators\n"
"borrowed from C.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:309
#, no-wrap
msgid ""
"These include pre- and post-increment/decrement ( i++, --foo ), add/sub/mult/div\n"
"assign operators ( a+=3, b*=2, c/=2.2, d-=6.2 ). But that's not all -- we also\n"
"get handy modulo/exponent assign ops as well ( a^=2, b%=4 ).\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:317
#, no-wrap
msgid "Field separators"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:321
#, no-wrap
msgid ""
"Awk has its own complement of special variables. Some of them allow you to\n"
"fine-tune how awk functions, while others can be read to glean valuable\n"
"information about the input. We've already touched on one of these special\n"
"variables, FS. As mentioned earlier, this variable allows you to set the\n"
"character sequence that awk expects to find between fields. When we were using\n"
"<path>/etc/passwd</path> as input, FS was set to \":\". While this did the trick,\n"
"FS allows us even more flexibility.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:330
#, no-wrap
msgid "Another field separator"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:331
#, no-wrap
msgid "FS=\"\\t+\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:335
#, no-wrap
msgid ""
"Above, we use the special \"+\" regular expression character, which means \"one or\n"
"more of the previous character\".\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:339
#, no-wrap
msgid "Setting FS to space"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:340
#, no-wrap
msgid "FS=\"[[:space:]+]\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:344
#, no-wrap
msgid ""
"While this assignment will do the trick, it's not necessary. Why? Because by\n"
"default, FS is set to a single space character, which awk interprets to mean\n"
"\"one or more spaces or tabs.\" In this particular example, the default FS setting\n"
"was exactly what you wanted in the first place!\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:350
#, no-wrap
msgid "Field separator sample"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:351
#, no-wrap
msgid "FS=\"foo[0-9][0-9][0-9]\"\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:357 en/articles/l-awk1.xml:360
#, no-wrap
msgid "Number of fields"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:361
#, no-wrap
msgid ""
"{\n"
"    if ( NF > 2 ) {\n"
"        print $1 \" \" $2 \":\" $3 \n"
"    }\n"
"}\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:371 en/articles/l-awk1.xml:374
#, no-wrap
msgid "Record number"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/articles/l-awk1.xml:375
#, no-wrap
msgid ""
"{\n"
"    <comment>#skip header</comment>\n"
"    if ( NR > 10 ) {\n"
"        print \"ok, now for the real information!\"\n"
"    }\n"
"}\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:384
#, no-wrap
msgid ""
"Awk provides additional variables that can be used for a variety of purposes.\n"
"We'll cover more of these variables in later articles.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/l-awk1.xml:389
#, no-wrap
msgid ""
"We've come to the end of our initial exploration of awk. As the series\n"
"continues, I'll demonstrate more advanced awk functionality, and we'll end the\n"
"series with a real-world awk application. In the meantime, if you're eager to\n"
"learn more, check out the resources listed below.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/l-awk1.xml:400
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/l-awk1.xml:402
#, no-wrap
msgid "Useful links"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:407
#, no-wrap
msgid ""
"    Read Daniel's other awk articles on developerWorks: Common threads: Awk by\n"
"    example, <uri link=\"l-awk2.xml\">Part 2</uri> and <uri\n"
"    link=\"l-awk3.xml\">Part 3</uri>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:412
#, no-wrap
msgid ""
"    If you'd like a good old-fashioned book, O'Reilly's <uri\n"
"    link=\"http://www.oreilly.com/catalog/sed2/\">sed &amp; awk, 2nd Edition</uri>\n"
"    is a wonderful choice.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:417
#, no-wrap
msgid ""
"    Be sure to check out the <uri\n"
"    link=\"http://www.faqs.org/faqs/computer-lang/awk/faq/\">comp.lang.awk\n"
"    FAQ</uri>. It also contains lots of\n"
"    additional awk links.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:423
#, no-wrap
msgid ""
"    Patrick Hartigan's <uri link=\"http://sparky.rice.edu/~hartigan/awk.html\">awk\n"
"    tutorial</uri> is packed with handy awk scripts.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:427
#, no-wrap
msgid ""
"    <uri link=\"http://www.tasoft.com/tawk.html\">Thompson's TAWK Compiler</uri>\n"
"    compiles awk scripts into fast binary executables. Versions are available\n"
"    for Windows, OS/2, DOS, and UNIX.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/articles/l-awk1.xml:432
#, no-wrap
msgid ""
"    <uri link=\"http://www.gnu.org/software/gawk/manual/gawk.html\">The GNU Awk\n"
"    User's Guide</uri> is available for online reference.\n"
"  "
msgstr ""
