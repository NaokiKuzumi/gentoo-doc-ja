# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/articles/afig-ct-ext3-intro.xml:6
#, no-wrap
msgid "Advanced Filesystem Implementor's Guide : Introducing ext3"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/articles/afig-ct-ext3-intro.xml:21
#, no-wrap
msgid ""
"With the 2.4 release of Linux come a host of new filesystem possibilities,\n"
"including Reiserfs, XFS, GFS, and others. These filesystems sound cool, but\n"
"what exactly can they do, what are they good at, and exactly how do you go\n"
"about safely using them in a production Linux environment? Daniel Robbins\n"
"answers these questions by showing you how to set up these new advanced\n"
"filesystems under Linux 2.4. In this installment, Daniel takes a look at ext3,\n"
"a new improved version of ext2 with journaling capabilities.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:34
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:39
#, no-wrap
msgid ""
"In the past few installments, we've taken a bit of a detour by looking at\n"
"non-traditional filesystems such as tmpfs and devfs. Now, it's time to get back\n"
"to disk-based filesystems, and we do this by taking a look at ext3. The ext3\n"
"filesystem, designed by Dr. Stephen Tweedie, is built on the framework of the\n"
"existing ext2 filesystem; in fact, ext3 is very similar to ext2 except for one\n"
"small (but important) difference -- it supports journaling. Yet even with this\n"
"small addition, I think you'll find that that ext3 has several surprising and\n"
"intriguing capabilities.  In this article, I'll give you a good understanding\n"
"of how ext3 compares to the other journaling filesystems currently available.\n"
"In my next article, we'll get ext3 up and running.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:56
#, no-wrap
msgid "Understanding Ext3"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:61
#, no-wrap
msgid ""
"So, how does ext3 compare to ReiserFS? In previous articles, I explained how\n"
"ReiserFS is well suited to handling small files (under 4K), and in certain\n"
"situations, ReiserFS' small file performance is ten to fifteen times greater\n"
"than that of ext2 and ext3. However, while ReiserFS has many strengths, it also\n"
"has weaknesses. In the current implementation of ReiserFS (version 3.6),\n"
"certain file access patterns can actually result in significantly worse\n"
"performance than ext2 and ext3, particularly when reading large mail\n"
"directories. Also, ReiserFS doesn't have a good track record of NFS\n"
"compatibility and has poor sparse file performance. In contrast, ext3 is a very\n"
"well-rounded filesystem. It's a lot like ext2; it's not going to give you the\n"
"blazingly fast small-file performance that ReiserFS gives you, but it's not\n"
"going to give you any unexpected performance or functionality hiccups either.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:76
#, no-wrap
msgid ""
"One of the nice things about ext3 is that because it is based on the ext2 code,\n"
"ext2 and ext3's on-disk format is identical; this means that a cleanly\n"
"unmounted ext3 filesystem can be remounted as an ext2 filesystem with\n"
"absolutely no problems. And that's not all. Thanks to the fact that ext2 and\n"
"ext3 use identical metadata, it's possible to perform in-place ext2 to ext3\n"
"filesystem upgrades. Yes, you read that right. By upgrading a few key system\n"
"utilities, installing a modern 2.4 kernel and typing in a single tune2fs\n"
"command per filesystem, you can convert your existing ext2 servers into\n"
"journaling ext3 systems. You can even do this while your ext2 filesystems are\n"
"mounted. The transition is safe, reversible, and incredibly easy, and unlike a\n"
"conversion to XFS, JFS, or ReiserFS, you don't need to back up and recreate\n"
"your filesystems from scratch. Now, for a moment, consider the thousands of\n"
"production ext2 servers in existence that are just minutes away from an ext3\n"
"upgrade; then, you'll have a good grasp of ext3's importance to the Linux\n"
"community.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:94
#, no-wrap
msgid ""
"If I had to describe ext3 in one word, I'd call it \"comfortable\". It's\n"
"incredibly easy to ext3-enable an existing ext2 system, and after you do,\n"
"you're not going to run into any unexpected performance quirks. And there's yet\n"
"another way that ext3 excels in the comfort department; ext3 happens to be one\n"
"of the most reliable journaled filesystems available for Linux, as I explain\n"
"below. \n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:107
#, no-wrap
msgid "Ext3 reliability"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:113
#, no-wrap
msgid ""
"In addition to being ext2-compatible, ext3 inherits other benefits by sharing\n"
"ext2's metadata format. For one, ext3 users gain access to a rock-solid fsck\n"
"tool. You'll recall that one of the points of using a journaling filesystem is\n"
"to avoid the need for an exhaustive fsck in the first place; however if you do\n"
"end up getting corrupt metadata, either from a flaky kernel, bad hard drive, or\n"
"something else, you'll greatly appreciate the fact that ext3 inherits ext2's\n"
"fsck. In contrast, ReiserFS' fsck is in its infancy, and fixing flaky metadata\n"
"when it does show up can be a difficult and dangerous process. \n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/articles/afig-ct-ext3-intro.xml:127
#, no-wrap
msgid "Metadata-only journaling"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:131
#, no-wrap
msgid ""
"Interestingly, ext3 handles journaling very differently than ReiserFS and other\n"
"journaling filesystems do. With ReiserFS, XFS, and JFS, the filesystem driver\n"
"journals metadata, but makes no provisions for journaling data. With\n"
"metadata-only journaling, your filesystem metadata is going to be rock solid,\n"
"and you will probably never need to perform an exhaustive fsck. However,\n"
"unexpected reboots and system lock-ups can result in significant corruption of\n"
"recently-modified data. Ext3 uses a couple of innovative solutions to avoid\n"
"these problems, which we'll look at in a bit.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:142
#, no-wrap
msgid ""
"But first, it's important to understand exactly how metadata-only journaling\n"
"could end up biting you. As an example, let's say that you were modifying a\n"
"file called /tmp/myfile.txt when the machine unexpectedly locked up, forcing a\n"
"reboot. If you were using a metadata-only journaling filesystem such as\n"
"ReiserFS, XFS or JFS, your filesystem metadata would be easily repaired, thanks\n"
"to the metadata journal, and you wouldn't need to sit through a laborious fsck.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:151
#, no-wrap
msgid ""
"However, there's the distinct possibility that when you load /tmp/myfile.txt\n"
"into a text editor, your file will not simply be missing recent changes, but\n"
"will contain a good amount of garbage and may even be completely unreadable.\n"
"This isn't something that will always happen, but it could happen and often\n"
"does.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:159
#, no-wrap
msgid ""
"Here's why. Typical journaled filesystems like ReiserFS, XFS, and JFS take\n"
"extra special care of metadata, but don't pay too much attention to data. In\n"
"our above example, the filesystem driver was in the process of modifying\n"
"several filesystem blocks. The filesystem driver updated the appropriate\n"
"metadata, but didn't have time to flush the data from its caches to the new\n"
"blocks on disk. Thus, when you loaded up /tmp/myfile.txt into a text editor,\n"
"part or all of the file contained garbage -- blocks of data that didn't get\n"
"initialized in time before the system locked up.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:175
#, no-wrap
msgid "The ext3 approach"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:180
#, no-wrap
msgid ""
"Now that we have a good general understanding of this problem, let's look how\n"
"ext3 implements journaling. In ext3, the journaling code uses a special API\n"
"called the Journaling Block Device layer, or JBD. The JBD has been designed for\n"
"the express purpose of implementing a journal on any kind of block device.\n"
"Ext3 implements its journaling by \"hooking in\" to the JBD API. For example, the\n"
"ext3 filesystem code will inform the JBD of modifications it is performing, and\n"
"will also request permission from the JBD before modifying certain data on\n"
"disk. By doing so, the JBD is given the appropriate opportunities to manage the\n"
"journal on behalf of the ext3 filesystem driver.  It's quite a nice\n"
"arrangement, and because the JBD is being developed as a separate, generic\n"
"entity, it could be used to add journaling capabilities to other filesystems in\n"
"the future.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:195
#, no-wrap
msgid ""
"Here are a couple of neat things about the JBD-managed ext3 journal. For one,\n"
"ext3's journal is stored in an inode -- a file, basically. Depending on how you\n"
"\"ext3-enable\" your filesystem, you may or may not be able to see this file,\n"
"located at /.journal. Of course, by storing the journal in an inode, ext3 is\n"
"able to add the needed journal to the filesystem without requiring incompatible\n"
"extensions to the ext2 metadata. This is one of the key ways that an ext3\n"
"filesystem maintains backwards compatibility with ext2 metadata, and in turn,\n"
"the ext2 filesystem driver. \n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:210
#, no-wrap
msgid "Different journaling approaches"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:215
#, no-wrap
msgid ""
"Not surprisingly, it turns out that there are a number of ways to implement a\n"
"journal. For example, a filesystem developer could design a journal that stores\n"
"spans of bytes that need to be modified on the host filesystem. The advantage\n"
"of this approach is that your journal would be able to store lots of tiny\n"
"little modifications to the filesystem in a very efficient way, since it would\n"
"only record the individual bytes that need to be modified and nothing more.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:224
#, no-wrap
msgid ""
"JBD takes another, and in some ways better, approach. Rather than recording\n"
"spans of bytes that must be changed, JBD stores the complete modified\n"
"filesystem blocks themselves. The ext3 filesystem driver also uses this\n"
"approach and stores complete replicas of the modified blocks (either 1K, 2K, or\n"
"4K) in memory to track pending IO operations. At first, this may seem a bit\n"
"wasteful. After all, complete blocks contain modified data but may also contain\n"
"unmodified (already on disk) data as well.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:234
#, no-wrap
msgid ""
"The approach that the JBD uses is called physical journaling, which means that\n"
"the JBD uses complete physical blocks as the underlying currency for\n"
"implementing the journal. In contrast, the approach of only storing modified\n"
"spans of bytes rather than complete blocks is called logical journaling, and is\n"
"the approach used by XFS. Because ext3 uses physical journaling, an ext3\n"
"journal will have a larger relative on-disk footprint than, say, an XFS\n"
"journal. But because ext3 uses complete blocks internally and in the journal,\n"
"ext3 doesn't deal with as much complexity as it would if it were to implement\n"
"logical journaling. In addition, the use of full blocks allows ext3 to perform\n"
"some additional optimizations, such as \"squishing\" multiple pending IO\n"
"operations within a single block into the same in-memory data structure. This,\n"
"in turn, allows ext3 to write these multiple changes to disk in a single write\n"
"operation, rather than many. In addition, because the literal block data is\n"
"stored in memory, little or no massaging of the in-memory data is required\n"
"before writing it to disk, greatly reducing CPU overhead.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:256
#, no-wrap
msgid "Ext3, protector of data"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:261
#, no-wrap
msgid ""
"And now, we finally get to see how the ext3 filesystem effectively provides\n"
"both metadata and data journaling, avoiding the data corruption problem I\n"
"described earlier in this article. In fact, ext3 actually has two methods to\n"
"ensure data and metadata integrity.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:268
#, no-wrap
msgid ""
"Originally, ext3 was designed to perform full data and metadata journaling.  In\n"
"this mode (called \"data=journal\" mode), the JBD journals all changes to the\n"
"filesystem, whether they are made to data or metadata. Because both data and\n"
"metadata are journaled, JBD can use the journal to bring both metadata and data\n"
"back to a consistent state. The drawback of full data journaling is that it can\n"
"be slow, although you can reduce the performance penalty by setting up a\n"
"relatively large journal.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:278
#, no-wrap
msgid ""
"Recently, a new journaling mode has been added to ext3 that provides the\n"
"benefits of full journaling but without introducing a severe performance\n"
"penalty. This new mode works by journaling metadata only. However, the ext3\n"
"filesystem driver keeps track of the particular data blocks that correspond\n"
"with each metadata update, grouping them into a single entity called a\n"
"transaction. When a transaction is applied to the filesystem proper, the data\n"
"blocks are written to disk first. Once they are written, the metadata changes\n"
"are then written to the journal. By using this technique (called \"data=ordered\"\n"
"mode), ext3 can provide data and metadata consistency, even though only\n"
"metadata changes are recorded in the journal. ext3 uses this mode by default.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:295
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:300
#, no-wrap
msgid ""
"These days, a lot of people are trying to determine which Linux journaling\n"
"filesystem is \"best\". In truth, there is no one \"right\" filesystem for every\n"
"application; each one has its own strengths. This is one of the benefits from\n"
"having so many next-generation Linux filesystems from which to choose. So,\n"
"instead of picking an arbitrary \"best\" filesystem and using it for every\n"
"conceivable application, it's far preferable to understand each filesystem's\n"
"strengths and weaknesses so that you can make an educated decision as to which\n"
"one to use.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:311
#, no-wrap
msgid ""
"Ext3 has a number of strengths. It has been designed to be extremely easy to\n"
"deploy. It's based on the solid ext2 filesystem code and it inherits a great\n"
"fsck tool. And ext3's journaling capabilities have been specially designed to\n"
"ensure the integrity of both metadata and data. All in all, ext3 is a truly\n"
"great filesystem, and a worthy successor to the now-venerable ext2 filesystem.\n"
"Join me in my next article, when we get ext3 up and running. Until then, you\n"
"may want to check out the following resources.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:325
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:345
#, no-wrap
msgid ""
"Read a <uri\n"
"link=\"http://olstrans.sourceforge.net/release/OLS2000-ext3/OLS2000-ext3.html\">complete\n"
"transcript</uri> of Dr. Stephen Tweedie's Ext3, Journaling Filesystem\n"
"presentation, which was featured at the Ottawa Linux Symposium in July 2000. \n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:353
#, no-wrap
msgid ""
"Find out more about using ext3 with 2.4 kernels at Andrew Morton's <uri\n"
"link=\"http://www.zip.com.au/~akpm/linux/ext3/index.html\">ext3 for 2.4</uri>\n"
"page. Andrew Morton is the man responsible for porting ext3 to the 2.4 kernel,\n"
"and provided invaluable assistance in writing this article. If you can't wait\n"
"until my next article, Andrew has a very nice <uri\n"
"link=\"http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html\">ext3 and 2.4\n"
"usage page</uri> that will show you how to get ext3 up and running on your\n"
"system in no time.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:364
#, no-wrap
msgid ""
"To keep abreast of the latest ext3 developments, be sure to visit the <uri\n"
"link=\"https://listman.redhat.com/archives/ext3-users/\">ext3-users mailing list\n"
"archive</uri>. Of course, you can also <uri\n"
"link=\"https://listman.redhat.com/mailman/listinfo/ext3-users\">subscribe</uri>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:371
#, no-wrap
msgid ""
"Take Daniel Robbins' free <uri\n"
"link=\"http://www-128.ibm.com/developerworks/edu/os-dw-linuxjfs-i.html\">JFS\n"
"fundamentals tutorial</uri> on developerWorks.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:377
#, no-wrap
msgid ""
"Browse <uri link=\"http://www-130.ibm.com/developerworks/linux/?article=lr\">more\n"
"Linux resources</uri> on developerWorks.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:382
#, no-wrap
msgid ""
"Browse <uri\n"
"link=\"http://www-130.ibm.com/developerworks/opensource/?article=osr\">more Open\n"
"source resources</uri> on developerWorks.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/articles/afig-ct-ext3-intro.xml:392
#, no-wrap
msgid "About the author"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/articles/afig-ct-ext3-intro.xml:397
#, no-wrap
msgid ""
"Residing in Albuquerque, New Mexico, Daniel Robbins is the President/CEO of\n"
"Gentoo Technologies, Inc., the creator of Gentoo Linux, an advanced Linux for\n"
"the PC, and the Portage system, a next-generation ports system for Linux. He\n"
"has also served as a contributing author for the Macmillan books Caldera\n"
"OpenLinux Unleashed, SuSE Linux Unleashed, and Samba Unleashed. Daniel has been\n"
"involved with computers in some fashion since the second grade, when he was\n"
"first exposed to the Logo programming language as well as a potentially\n"
"dangerous dose of Pac Man. This probably explains why he has since served as a\n"
"Lead Graphic Artist at SONY Electronic Publishing/Psygnosis. Daniel enjoys\n"
"spending time with his wife, Mary, and their daughter, Hadassah. You can\n"
"contact Daniel at <mail link=\"drobbins@gentoo.org\">drobbins@gentoo.org</mail>.\n"
msgstr ""
