# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-02-23 10:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <guide><title>
#: en/gcc-optimization.xml:6
#, no-wrap
msgid "Compilation Optimization Guide"
msgstr ""

#. type: Content of: <guide><abstract>
#: en/gcc-optimization.xml:13
#, no-wrap
msgid ""
"This guide provides an introduction to optimizing compiled code using safe, sane\n"
"CFLAGS and CXXFLAGS. It also as describes the theory behind optimizing in\n"
"general.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/gcc-optimization.xml:26
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:28
#, no-wrap
msgid "What are CFLAGS and CXXFLAGS?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:32
#, no-wrap
msgid ""
"CFLAGS and CXXFLAGS are environment variables that are used to tell the GNU\n"
"Compiler Collection, <c>gcc</c>, what kinds of switches to use when compiling\n"
"source code. CFLAGS are for code written in C, while CXXFLAGS are for code\n"
"written in C++.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:39
#, no-wrap
msgid ""
"They can be used to decrease the amount of debug messages for a program,\n"
"increase error warning levels, and, of course, to optimize the code produced.\n"
"The <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/Invoking-GCC.html#Invoking-GCC\">GNU\n"
"gcc handbook</uri> maintains a complete list of available options and their\n"
"purposes.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:50
#, no-wrap
msgid "How are they used?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:54
#, no-wrap
msgid ""
"CFLAGS and CXXFLAGS can be used in two ways. First, they can be used\n"
"per-program with Makefiles generated by automake.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:59
#, no-wrap
msgid ""
"However, this should not be done when installing packages found in the Portage\n"
"tree. Instead, set your CFLAGS and CXXFLAGS in <path>/etc/make.conf</path>. This\n"
"way all packages will be compiled using the options you specify.\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:64
#, no-wrap
msgid "CFLAGS in /etc/make.conf"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:65
#, no-wrap
msgid ""
"CFLAGS=\"-march=athlon64 -O2 -pipe\"\n"
"CXXFLAGS=\"${CFLAGS}\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:70
#, no-wrap
msgid ""
"As you can see, CXXFLAGS is set to use all the options present in CFLAGS. This\n"
"is what you'll want almost without fail. You shouldn't ever need to specify\n"
"additional options in CXXFLAGS.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:78
#, no-wrap
msgid "Misconceptions"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:82
#, no-wrap
msgid ""
"While CFLAGS and CXXFLAGS can be very effective means of getting source code to\n"
"produce smaller and/or faster binaries, they can also impair the function of\n"
"your code, bloat its size, slow down its execution time, or even cause\n"
"compilation failures!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:89
#, no-wrap
msgid ""
"CFLAGS are not a magic bullet; they will not automatically make your system run\n"
"any faster or your binaries to take up less space on disk. Adding more and more\n"
"flags in an attempt to optimize (or \"rice\") your system is a sure recipe for\n"
"failure. There is a point at which you will reach diminishing returns.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:96
#, no-wrap
msgid ""
"Despite the bragging you'll find on the internet, aggressive CFLAGS and CXXFLAGS\n"
"are far more likely to harm your programs than do them any good. Keep in mind\n"
"that the reason the flags exist in the first place is because they are designed\n"
"to be used at specific places for specific purposes. Just because one particular\n"
"CFLAG is good for one bit of code doesn't mean that it is suited to compiling\n"
"everything you will ever install on your machine!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:107
#, no-wrap
msgid "Ready?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:111
#, no-wrap
msgid ""
"Now that you're aware of some of the risks involved, let's take a look at some\n"
"sane, safe optimizations for your computer. These will hold you in good stead\n"
"and will endear you to developers the next time you report a problem on <uri\n"
"link=\"http://bugs.gentoo.org\">Bugzilla</uri>. (Developers will usually request\n"
"that you recompile a package with minimal CFLAGS to see if the problem persists.\n"
"Remember, aggressive flags can ruin code.)\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/gcc-optimization.xml:124
#, no-wrap
msgid "Optimizing"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:126
#, no-wrap
msgid "The basics"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:130
#, no-wrap
msgid ""
"The goal behind using CFLAGS and CXXFLAGS is to create code tailor-made to your\n"
"system; it should function perfectly while being lean and fast, if possible.\n"
"Sometimes these conditions are mutually exclusive, so we'll stick with\n"
"combinations known to work well. Ideally, they are the best available for any\n"
"CPU architecture. We'll mention the aggressive flags later so you know what to\n"
"look out for. We won't discuss every option listed on the <c>gcc</c> manual\n"
"(there are hundreds), but we'll cover the basic, most common flags.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><note>
#: en/gcc-optimization.xml:140
#, no-wrap
msgid ""
"Whenever you're not sure what a flag actually does, refer to the relevant\n"
"chapter of the <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.3.3/gcc/Optimize-Options.html#Optimize-Options\">gcc\n"
"manual</uri>. If you're still stumped, try Google, or check out the <c>gcc</c>\n"
"<uri link=\"http://gcc.gnu.org/lists.html\">mailing lists</uri>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:150
#, no-wrap
msgid "-march"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:154
#, no-wrap
msgid ""
"The first and most important option is <c>-march</c>. This tells the compiler\n"
"what code it should produce for your processor <uri\n"
"link=\"http://en.wikipedia.org/wiki/Microarchitecture\">architecture</uri> (or\n"
"<e>arch</e>); it says that it should produce code for a certain kind of CPU.\n"
"Different CPUs have different capabilities, support different instruction sets,\n"
"and have different ways of executing code. The <c>-march</c> flag will instruct\n"
"the compiler to produce code specifically for your CPU, with all its\n"
"capabilities, features, instruction sets, quirks, and so on.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:165
#, no-wrap
msgid ""
"Even though the CHOST variable in <path>/etc/make.conf</path> specifies the\n"
"general architecture used, <c>-march</c> should still be used so that programs\n"
"can be optimized for your specific processor. x86 and x86-64 CPUs (among others)\n"
"should make use of the <c>-march</c> flag.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:172
#, no-wrap
msgid "What kind of CPU do you have? To find out, run the following command:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:175
#, no-wrap
msgid "Examining CPU information"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:176
#, no-wrap
msgid "$ <i>cat /proc/cpuinfo</i>\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:180
#, no-wrap
msgid ""
"Now let's see <c>-march</c> in action. This example is for an older Pentium III\n"
"chip:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:184
#, no-wrap
msgid "/etc/make.conf: Pentium III"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:185
#, no-wrap
msgid ""
"CFLAGS=\"-march=pentium3\"\n"
"CXXFLAGS=\"${CFLAGS}\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:190
#, no-wrap
msgid "Here's another one for a 64-bit AMD CPU:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:193
#, no-wrap
msgid "/etc/make.conf: AMD64"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:194
#, no-wrap
msgid ""
"CFLAGS=\"-march=athlon64\"\n"
"CXXFLAGS=\"${CFLAGS}\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:199
#, no-wrap
msgid ""
"If you still aren't sure what kind of CPU you have, you may just want to use\n"
"<c>-march=native</c>. When this flag is used, GCC will detect your processor and\n"
"automatically set appropriate flags for it. "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p><brite>
#: en/gcc-optimization.xml:201
#, no-wrap
msgid ""
"However, this should not be\n"
"used if you intend to compile packages for a different CPU!"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:206
#, no-wrap
msgid ""
"So if you're compiling packages on one computer, but intend to run them on a\n"
"different computer (such as when using a fast computer to build for an older,\n"
"slower machine), then <e>do not</e> use <c>-march=native</c>. \"Native\" means\n"
"that the code produced will run <e>only</e> on that type of CPU. The\n"
"applications built with <c>-march=native</c> on an AMD Athlon 64 CPU will not be\n"
"able to run on an old VIA C3 CPU.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:215
#, no-wrap
msgid ""
"Also available are the <c>-mtune</c> and <c>-mcpu</c> flags. These flags are\n"
"normally only used when there is no available <c>-march</c> option; certain\n"
"processor architectures may require <c>-mtune</c> or even <c>-mcpu</c>.\n"
"Unfortunately, <c>gcc</c>'s behavior isn't very consistent with how each flag\n"
"behaves from one architecture to the next.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:223
#, no-wrap
msgid ""
"On x86 and x86-64 CPUs, <c>-march</c> will generate code specifically for that\n"
"CPU using all its available instruction sets and the correct ABI; it will have\n"
"no backwards compatibility for older/different CPUs. If you don't need to\n"
"execute code on anything other than the system you're running Gentoo on,\n"
"continue to use <c>-march</c>. You should only consider using <c>-mtune</c> when\n"
"you need to generate code for older CPUs such as i386 and i486. <c>-mtune</c>\n"
"produces more generic code than <c>-march</c>; though it will tune code for a\n"
"certain CPU, it doesn't take into account available instruction sets and ABI.\n"
"Don't use <c>-mcpu</c> on x86 or x86-64 systems, as it is deprecated for those\n"
"arches.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:236
#, no-wrap
msgid ""
"Only non-x86/x86-64 CPUs (such as Sparc, Alpha, and PowerPC) may require\n"
"<c>-mtune</c> or <c>-mcpu</c> instead of <c>-march</c>. On these architectures,\n"
"<c>-mtune</c>/<c>-mcpu</c> will sometimes behave just like <c>-march</c> (on\n"
"x86/x86-64) . . . but with a different flag name. Again, <c>gcc</c>'s behavior\n"
"and flag naming just isn't consistent across architectures, so be sure to check\n"
"the <c>gcc</c> <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/Submodel-Options.html#Submodel-Options\">manual</uri>\n"
"to determine which one you should use for your system.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><note>
#: en/gcc-optimization.xml:247
#, no-wrap
msgid ""
"For more suggested <c>-march</c>/<c>-mtune</c>/<c>-mcpu</c> settings, please\n"
"read chapter 5 of the appropriate <uri link=\"/doc/en/handbook/\">Gentoo\n"
"Installation Handbook</uri> for your arch. Also, read the <c>gcc</c> manual's\n"
"list of <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/Submodel-Options.html#Submodel-Options\">architecture-specific\n"
"options</uri>, as well as more detailed explanations about the differences\n"
"between <c>-march</c>, <c>-mcpu</c>, and <c>-mtune</c>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:259
#, no-wrap
msgid "-O"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:263
#, no-wrap
msgid ""
"Next up is the <c>-O</c> variable. This controls the overall level of\n"
"optimization. This makes the code compilation take somewhat more time, and can\n"
"take up much more memory, especially as you increase the level of optimization.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:269
#, no-wrap
msgid ""
"There are five <c>-O</c> settings: <c>-O0</c>, <c>-O1</c>, <c>-O2</c>,\n"
"<c>-O3</c>, and <c>-Os</c>. You should use only one of them in\n"
"<path>/etc/make.conf</path>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:275
#, no-wrap
msgid ""
"With the exception of <c>-O0</c>, the <c>-O</c> settings each activate several\n"
"additional flags, so be sure to read the gcc manual's chapter on <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/Optimize-Options.html#Optimize-Options\">optimization\n"
"options</uri> to learn which flags are activated at each <c>-O</c> level, as\n"
"well as some explanations as to what they do.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:283
#, no-wrap
msgid "Let's examine each optimization level:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:288
#, no-wrap
msgid ""
"    <c>-O0</c>: This level (that's the letter \"O\" followed by a zero) turns off\n"
"    optimization entirely and is the default if no <c>-O</c> level is specified\n"
"    in CFLAGS or CXXFLAGS. Your code will not be optimized; it's not normally\n"
"    desired.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:294
#, no-wrap
msgid ""
"    <c>-O1</c>: This is the most basic optimization level. The compiler will try\n"
"    to produce faster, smaller code without taking much compilation time.\n"
"    It's pretty basic, but it should get the job done all the time.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:299
#, no-wrap
msgid ""
"    <c>-O2</c>: A step up from <c>-O1</c>. This is the <e>recommended</e> level\n"
"    of optimization unless you have special needs. <c>-O2</c> will activate a\n"
"    few more flags in addition to the ones activated by <c>-O1</c>. With\n"
"    <c>-O2</c>, the compiler will attempt to increase code performance without\n"
"    compromising on size, and without taking too much compilation time.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:306
#, no-wrap
msgid ""
"    <c>-O3</c>: This is the highest level of optimization possible, and also the\n"
"    riskiest. It will take a longer time to compile your code with this option,\n"
"    and in fact it <e>should not be used system-wide with <c>gcc</c> 4.x</e>.\n"
"    The behavior of <c>gcc</c> has changed significantly since version 3.x. In\n"
"    3.x, <c>-O3</c> has been shown to lead to marginally faster execution times\n"
"    over <c>-O2</c>, but this is no longer the case with <c>gcc</c> 4.x.\n"
"    Compiling all your packages with <c>-O3</c> <e>will</e> result in larger\n"
"    binaries that require more memory, and will significantly increase the odds\n"
"    of compilation failure or unexpected program behavior (including errors).\n"
"    The downsides outweigh the benefits; remember the principle of diminishing\n"
"    returns. <b>Using <c>-O3</c> is not recommended for <c>gcc</c> 4.x.</b>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:319
#, no-wrap
msgid ""
"    <c>-Os</c>: This level will optimize your code for size. It activates all\n"
"    <c>-O2</c> options that don't increase the size of the generated code. It\n"
"    can be useful for machines that have extremely limited disk storage space\n"
"    and/or have CPUs with small cache sizes. However, it can cause quite a few\n"
"    problems, which is why it is filtered out by many of the ebuilds in the\n"
"    tree. Using <c>-Os</c> is not recommended.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:329
#, no-wrap
msgid ""
"As previously mentioned, <c>-O2</c> is the recommended optimization level. If\n"
"package compilations error out, check to make sure that you aren't using\n"
"<c>-O3</c>. As a fallback option, try setting your CFLAGS and CXXFLAGS to a\n"
"lower optimization level, such as <c>-O1</c> or even <c>-O0 -g2 -ggdb</c> (for\n"
"error reporting and checking for possible problems) and recompile the package.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:339
#, no-wrap
msgid "-pipe"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:343
#, no-wrap
msgid ""
"A common flag is <c>-pipe</c>. This flag actually has no effect on the\n"
"generated code, but it makes the compilation process faster. It tells the\n"
"compiler to use pipes instead of temporary files during the different stages of\n"
"compilation, which uses more memory. On systems with low memory, gcc might get\n"
"killed. In that case, do not use this flag.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:353
#, no-wrap
msgid "-fomit-frame-pointer"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:357
#, no-wrap
msgid ""
"This is a very common flag designed to reduce generated code size. It is turned\n"
"on at all levels of <c>-O</c> (except <c>-O0</c>) on architectures where doing\n"
"so does not interfere with debugging (such as x86-64), but you may need to\n"
"activate it yourself by adding it to your flags. Though the GNU <c>gcc</c>\n"
"manual does not specify all architectures it is turned on by using <c>-O</c>,\n"
"you will need to explicitly activate it on x86. However, using this flag will\n"
"make debugging hard to impossible.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:367
#, no-wrap
msgid ""
"In particular, it makes troubleshooting applications written in Java much\n"
"harder, though Java is not the only code affected by using this flag. So while\n"
"the flag can help, it also makes debugging harder; backtraces in particular will\n"
"be useless.  However, if you don't plan to do much software debugging and\n"
"haven't added any other debugging-related CFLAGS such as <c>-ggdb</c>, then you\n"
"can try using <c>-fomit-frame-pointer</c>.\n"
msgstr ""

#
#
#. source for this info:
#. http://www.coyotegulch.com/products/acovea/aco5p4gcc40.html
#. type: Content of: <guide><chapter><section><body><impo>
#: en/gcc-optimization.xml:376
#, no-wrap
msgid ""
"Do <e>not</e> combine <c>-fomit-frame-pointer</c> with the similar flag\n"
"<c>-momit-leaf-frame-pointer</c>. Using the latter flag is discouraged, as\n"
"<c>-fomit-frame-pointer</c> already does the job properly. Furthermore,\n"
"<c>-momit-leaf-frame-pointer</c> has been shown to negatively impact code\n"
"performance.\n"
"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:390
#, no-wrap
msgid "-msse, -msse2, -msse3, -mmmx, -m3dnow"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:394
#, no-wrap
msgid ""
"These flags enable the <uri\n"
"link=\"http://en.wikipedia.org/wiki/Streaming_SIMD_Extensions\">SSE</uri>, <uri\n"
"link=\"http://en.wikipedia.org/wiki/SSE2\">SSE2</uri>, <uri\n"
"link=\"http://en.wikipedia.org/wiki/SSSE3\">SSE3</uri>, <uri\n"
"link=\"http://en.wikipedia.org/wiki/MMX\">MMX</uri>, and <uri\n"
"link=\"http://en.wikipedia.org/wiki/3dnow\">3DNow!</uri> instruction sets for x86\n"
"and x86-64 architectures. These are useful primarily in multimedia, gaming, and\n"
"other floating point-intensive computing tasks, though they also contain several\n"
"other mathematical enhancements. These instruction sets are found in more modern\n"
"CPUs.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><impo>
#: en/gcc-optimization.xml:407
#, no-wrap
msgid ""
"Be sure to check if your CPU supports these by running <c>cat /proc/cpuinfo</c>.\n"
"The output will include any supported additional instruction sets. Note that\n"
"<b>pni</b> is just a different name for SSE3.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:413
#, no-wrap
msgid ""
"You normally don't need to add any of these flags to <path>/etc/make.conf</path>\n"
"as long as you are using the correct <c>-march</c> (for example,\n"
"<c>-march=nocona</c> implies <c>-msse3</c>). Some notable exceptions are newer\n"
"VIA and AMD64 CPUs that support instructions not implied by <c>-march</c> (such\n"
"as SSE3). For CPUs like these you'll need to enable additional flags where\n"
"appropriate after checking the output of <c>cat /proc/cpuinfo</c>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><note>
#: en/gcc-optimization.xml:422
#, no-wrap
msgid ""
"You should check the <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/i386-and-x86_002d64-Options.html#i386-and-x86_002d64-Options\">list</uri>\n"
"of x86 and x86-64-specific flags to see which of these instruction sets are\n"
"activated by the proper CPU type flag. If an instruction is listed, then you\n"
"don't need to specify it; it will be turned on by using the proper <c>-march</c>\n"
"setting.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/gcc-optimization.xml:435
#, no-wrap
msgid "Optimization FAQs"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:437
#, no-wrap
msgid "But I get better performance with -funroll-loops -fomg-optimize!"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:441
#, no-wrap
msgid ""
"No, you only <e>think</e> you do because someone has convinced you that more\n"
"flags are better. Aggressive flags will only hurt your applications when used\n"
"system-wide. Even the <c>gcc</c> <uri\n"
"link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/Optimize-Options.html#Optimize-Options\">manual</uri>\n"
"says that using <c>-funroll-loops</c> and <c>-funroll-all-loops</c> makes code\n"
"larger and run more slowly. Yet for some reason, these two flags, along with\n"
"<c>-ffast-math</c>, <c>-fforce-mem</c>, <c>-fforce-addr</c>, and similar flags,\n"
"continue to be very popular among ricers who want the biggest bragging rights.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:452
#, no-wrap
msgid ""
"The truth of the matter is that they are dangerously aggressive flags. Take a\n"
"good look around the <uri link=\"http://forums.gentoo.org\">Gentoo Forums</uri>\n"
"and <uri link=\"http://bugs.gentoo.org\">Bugzilla</uri> to see what those flags\n"
"do: nothing good!\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:459
#, no-wrap
msgid ""
"You don't need to use those flags globally in CFLAGS or CXXFLAGS. They will only\n"
"hurt performance. They may make you sound like you have a high-performance\n"
"system running on the bleeding edge, but they don't do anything but bloat your\n"
"code and get your bugs marked INVALID or WONTFIX.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:466
#, no-wrap
msgid ""
"You don't need dangerous flags like these. <b>Don't use them</b>. Stick to the\n"
"basics: <c>-march</c>, <c>-O</c>, and <c>-pipe</c>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:473
#, no-wrap
msgid "What about -O levels higher than 3?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:477
#, no-wrap
msgid ""
"Some users boast about even better performance obtained by using <c>-O4</c>,\n"
"<c>-O9</c>, and so on, but the reality is that <c>-O</c> levels higher than 3\n"
"have no effect. The compiler may accept CFLAGS like <c>-O4</c>, but it actually\n"
"doesn't do anything with them. It only performs the optimizations for\n"
"<c>-O3</c>, nothing more.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:485
#, no-wrap
msgid ""
"Need more proof? Examine the <c>gcc</c> <uri\n"
"link=\"http://gcc.gnu.org/viewcvs/trunk/gcc/opts.c?revision=124622&amp;view=markup\">source\n"
"code</uri>:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:490
#, no-wrap
msgid "-O source code"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:491
#, no-wrap
msgid ""
"if (optimize >= 3)\n"
"    {\n"
"      flag_inline_functions = 1;\n"
"      flag_unswitch_loops = 1;\n"
"      flag_gcse_after_reload = 1;\n"
"      /* Allow even more virtual operators.  */\n"
"      set_param_value (\"max-aliased-vops\", 1000);\n"
"      set_param_value (\"avg-aliased-vops\", 3);\n"
"    }\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:503
#, no-wrap
msgid "As you can see, any value higher than 3 is treated as just <c>-O3</c>.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:509
#, no-wrap
msgid "What about redundant flags?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:513
#, no-wrap
msgid ""
"Oftentimes CFLAGS and CXXFLAGS that are turned on at various <c>-O</c> levels\n"
"are specified redundantly in <path>/etc/make.conf</path>. Sometimes this is done\n"
"out of ignorance, but it is also done to avoid flag filtering or flag replacing.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:519
#, no-wrap
msgid ""
"Flag filtering/replacing is done in many of the ebuilds in the Portage tree. It\n"
"is usually done because packages fail to compile at certain <c>-O</c> levels, or\n"
"when the source code is too sensitive for any additional flags to be used. The\n"
"ebuild will either filter out some or all CFLAGS and CXXFLAGS, or it may replace\n"
"<c>-O</c> with a different level.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:527
#, no-wrap
msgid ""
"The <uri\n"
"link=\"http://devmanual.gentoo.org/ebuild-writing/functions/src_compile/build-environment/index.html\">Gentoo\n"
"Developer Manual</uri> outlines where and how flag filtering/replacing works.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:533
#, no-wrap
msgid ""
"It's possible to circumvent <c>-O</c> filtering by redundantly listing the flags\n"
"for a certain level, such as <c>-O3</c>, by doing things like:\n"
msgstr ""

#. type: Attribute 'caption' of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:537
#, no-wrap
msgid "Specifying redundant CFLAGS"
msgstr ""

#. type: Content of: <guide><chapter><section><body><pre>
#: en/gcc-optimization.xml:538
#, no-wrap
msgid "CFLAGS=\"-O3 -finline-functions -funswitch-loops\"\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:542
#, no-wrap
msgid "However, "
msgstr ""

#. type: Content of: <guide><chapter><section><body><p><brite>
#: en/gcc-optimization.xml:542
#, no-wrap
msgid "this is not a smart thing to do"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:542
#, no-wrap
msgid ""
". CFLAGS are filtered for\n"
"a reason! When flags are filtered, it means that it is unsafe to build a package\n"
"with those flags. Clearly, it is <e>not</e> safe to compile your whole system\n"
"with <c>-O3</c> if some of the flags turned on by that level will cause problems\n"
"with certain packages. Therefore, you shouldn't try to \"outsmart\" the developers\n"
"who maintain those packages. <e>Trust the developers</e>. Flag filtering and\n"
"replacing is done for your benefit! If an ebuild specifies alternative flags,\n"
"then don't try to get around it.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:553
#, no-wrap
msgid ""
"You will most likely continue to run into problems when you build a package with\n"
"unacceptable flags. When you report your troubles on Bugzilla, the flags you use\n"
"in <path>/etc/make.conf</path> will be readily visible and you will be told to\n"
"recompile without those flags. Save yourself the trouble of recompiling by not\n"
"using redundant flags in the first place! Don't just automatically assume that\n"
"you know better than the developers.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:564
#, no-wrap
msgid "What about LDFLAGS?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:568
#, no-wrap
msgid ""
"The Gentoo developers have already set basic, safe LDFLAGS in the base profiles,\n"
"so you don't need to change them.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><title>
#: en/gcc-optimization.xml:575
#, no-wrap
msgid "Can I use per-package flags?"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:579
#, no-wrap
msgid ""
"There is no supported method for using CFLAGS or other variables on a\n"
"per-package basis, though there are a few <uri\n"
"link=\"http://forums.gentoo.org/viewtopic-p-3832057.html#3832057\">rather\n"
"abusive</uri> ways of trying force Portage to do so.\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><warn>
#: en/gcc-optimization.xml:586
#, no-wrap
msgid ""
"You <e>should not</e> try to force Portage to use per-package flags, as it is\n"
"not in any way supported and will greatly complicate bug reports. Just set your\n"
"flags in <path>/etc/make.conf</path> to be used on a system-wide basis.\n"
msgstr ""

#. type: Content of: <guide><chapter><title>
#: en/gcc-optimization.xml:596
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Content of: <guide><chapter><section><body><p>
#: en/gcc-optimization.xml:601
#, no-wrap
msgid "The following resources are of some help in further understanding optimization:\n"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:606
#, no-wrap
msgid ""
"    The <uri link=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.4/gcc/\">GNU gcc\n"
"    manual</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:610
#, no-wrap
msgid ""
"    Chapter 5 of the <uri link=\"/doc/en/handbook/\">Gentoo Installation\n"
"    Handbooks</uri>\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:613
#, no-wrap
msgid "<c>man make.conf</c>"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:614
#, no-wrap
msgid "<uri link=\"http://en.wikipedia.org\">Wikipedia</uri>"
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:616
#, no-wrap
msgid ""
"    <uri link=\"http://www.coyotegulch.com/products/acovea/\">Acovea</uri>, a\n"
"    benchmarking and test suite that can be useful for determining how different\n"
"    compiler flags interact and affect generated code, though its code\n"
"    suggestions are not appropriate for system-wide use. It is available in\n"
"    Portage: <c>emerge acovea</c>.\n"
"  "
msgstr ""

#. type: Content of: <guide><chapter><section><body><ul><li>
#: en/gcc-optimization.xml:622
#, no-wrap
msgid "The <uri link=\"http://forums.gentoo.org\">Gentoo Forums</uri>"
msgstr ""
